author: jmckenty
name: sample-yaml
inputs:
  - nist-800-53/data/certifications/FedRAMP-low.yaml
  - nist-800-53/data/certifications/FedRAMP-med.yaml
  - nist-800-53/data/certifications/LATO.yaml
  - nist-800-53/data/standards/NIST-800-53.yaml
  - cloudfoundry-controls/data/components/CloudFoundry/ASG.yaml
  - cloudfoundry-controls/data/components/CloudFoundry/BOSHStemcells.yaml
  - cloudfoundry-controls/data/components/CloudFoundry/HM9000.yaml
  - cloudfoundry-controls/data/components/CloudFoundry/Loggregator.yaml
  - cloudfoundry-controls/data/components/CloudFoundry/Manifests.yaml
  - cloudfoundry-controls/data/components/CloudFoundry/UAA-LDAP.yaml
  - cloudfoundry-controls/data/components/CloudFoundry/UAA.yaml
  - cloudfoundry-controls/data/components/AWS/ACL.yaml
  - cloudfoundry-controls/data/components/AWS/AMI.yaml
  - cloudfoundry-controls/data/components/AWS/AWSConfig.yaml
  - cloudfoundry-controls/data/components/AWS/AWSServiceCatalog.yaml
  - cloudfoundry-controls/data/components/AWS/AlienVault.yaml
  - cloudfoundry-controls/data/components/AWS/CloudFormation.yaml
  - cloudfoundry-controls/data/components/AWS/CloudTrail.yaml
  - cloudfoundry-controls/data/components/AWS/EBS.yaml
  - cloudfoundry-controls/data/components/AWS/EC2.yaml
  - cloudfoundry-controls/data/components/AWS/IAM.yaml
  - cloudfoundry-controls/data/components/AWS/MFA.yaml
  - cloudfoundry-controls/data/components/AWS/Nessus.yaml
  - cloudfoundry-controls/data/components/AWS/OWASPZap.yaml
  - cloudfoundry-controls/data/components/AWS/SophosUTM.yaml
  - cloudfoundry-controls/data/components/AWS/VPC.yaml
  - cloudfoundry-controls/data/components/AWS/VisualOps.yaml
  - cloudfoundry-controls/data/components/AWS/s3.yaml
  - cloudfoundry-controls/data/components/18F/ACPolicy.yaml
  - cloudfoundry-controls/data/components/18F/ATPolicy.yaml
  - cloudfoundry-controls/data/components/18F/AUPolicy.yaml
  - cloudfoundry-controls/data/components/18F/CAPolicy.yaml
  - cloudfoundry-controls/data/components/18F/CMPolicy.yaml
  - cloudfoundry-controls/data/components/18F/CPPolicy.yaml
  - cloudfoundry-controls/data/components/18F/IAPolicy.yaml
  - cloudfoundry-controls/data/components/18F/IRPolicy.yaml
  - cloudfoundry-controls/data/components/18F/MAPolicy.yaml
  - cloudfoundry-controls/data/components/18F/MPPolicy.yaml
  - cloudfoundry-controls/data/components/18F/PEPolicy.yaml
  - cloudfoundry-controls/data/components/18F/PLPolicy.yaml
  - cloudfoundry-controls/data/components/18F/PSPolicy.yaml
  - cloudfoundry-controls/data/components/18F/RAPolicy.yaml
  - cloudfoundry-controls/data/components/18F/SAPolicy.yaml
  - cloudfoundry-controls/data/components/18F/SCPolicy.yaml
  - cloudfoundry-controls/data/components/18F/SIPolicy.yaml
certification: FedRAMP-low
date: 2015-11-26 05:14:09.309363
system:
  NIST-800-53:
    AC-2:
      # 18F/Access Control Policies for 18F/satisfies/NIST-800-53/AC-2
      {b: 'The 18F DevOps team is the assgiend account managers for all information system
        accounts. Account managers are assigned for account groups in all environments,
        determined by the Project Manager and/or the Information System Owner.
    
        ', c: '18F establishes conditions for group and role membership within the Cloud
        Foundry Platform as a service and AWS environment.
    
        ', d: 'The 18F/GSA Program Office specifies authorized users of the information
        system, group and role membership, and access authorizations (i.e., privileges)
        and other attributes (as required) for each account. Systems Onwers/ Project managers
        provide the details of what type of access is needed for an authorized authorized
        user.
    
        All accounts will be documented within their respective information systems, detailing
        their group and role membership, and access authorizations. This documentation
        will be exported by DevOps and archived for up to a year from the date of account
        creation by the managing 18F project lead and Cloud Foundry Information System
        Technical Point of Contact (Operating Environment) in accordance with best business
        and security practices.
    
        ', e: '18F requires approvals by the 18F project lead and 18F system owners for
        requests to create information system accounts. All accounts will be documented
        within the 18F Github Ticketing and Tracking systems with their respective information
        systems, detailing their group, role membership, and access authorizations.
    
        ', f: '18F creates, enables, modifies, disables, and removes information system
        accounts in accordance with the 18F access control policy and approvals from 18F
        DevOps.
    
        ', g: '18F Monitors the use of all information system accounts within its environment.
    
        ', h: "18F notifies the DevOps account managers, when accounts are no longer required,\
        \ users are terminated or transferred, and when individual\u2019s information\
        \ system usage or need-to-know changes.\nFor all environments, Account Managers,\
        \ the 18F Project Manager, and/or  Information System Owner will be notified when\
        \ accounts are no longer required, accounts are terminated or transferred, and\
        \ when individual system usage or need to know changes. Notification will be achieved\
        \ via electronic notification or other official means.\n", i: "18F authorizes\
        \ access to its information systems based on a valid access authorization from\
        \ system owners and DevOps, intended system usage within the 18F network environment,\
        \ and other attributes as required by the organization or associated missions/business\
        \ functions. This is documented within section 3 of 18F access control policy\
        \ \u201CAccess Management\u201D.\n", j: '18F reviews user and system accounts
        for compliance with account management requirements at least on an annual basis.  Currently,
        system and user accounts are being monitored manually on a monthly basis and programmatically
        on a continuous basis.
    
        ', k: '18F establishes a process for reissuing shared/group account credentials
        when individuals are removed from the group. 18F utilizes its GitHub tracking
        and ticketing system for requests to reissue and remove individuals from group
        memberships within its environment.
    
        '}
    
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/AC-2
      {a: '- Access to Amazon EC2 Linux instances are managed by the use of EC2 key pairs
        and using SSH to access the local instance on the individual Linux, or appliance
        instance. Account types include individual user and system/application user accounts.
        Shared or group accounts are not permitted outside of default accounts such as
        local Administrators or root. There are no guest/anonymous or temporary user accounts.
    
        - Operating System user groups are documented in section 9.1 Types of Users.
    
        - Initial Linux local root access is provided to AWS administrator account users
        only if they provide the key pair assigned to the Linux EC2 instance and login
        using SSH.
    
        ', f: '- Local system user account establishment, activation, modification, disablement
        or removal requires approval by the managing 18F project lead and Cloud Foundry
        Information System Technical Point of Contact (Operating Environment).
    
        ', g: '- 18F has implemented AWS CloudWatch for basic monitoring of Amazon EC2
        instances. Basic Monitoring for Amazon EC2 instances: Seven pre-selected metrics
        at five-minute frequency and three status check metrics at one-minute frequency.
    
        - 18F has implemented Detailed Monitoring for Amazon EC2 instances: All metrics
        available to Basic Monitoring at one-minute frequency. Instances with Detailed
        Monitoring enabled allow data aggregation by Amazon EC2 AMI ID and instance type.
    
        - 18F has implemented the use of Auto Scaling and Elastic Load Balancing where
        Amazon CloudWatch provides Amazon EC2 instance metrics aggregated by Auto Scaling
        groups and Elastic Load Balancers.
    
        - Monitoring data is retained for two weeks, even if AWS resources have been terminated.
        This enables 18F to quickly look back at the metrics preceding an event of interest.
    
        - Metrics are accessed in either the Amazon EC2 tab or the Amazon CloudWatch tab
        of the AWS Management Console, or by using the Amazon CloudWatch API.
    
        ', h: '- Local system user accounts will be deactivated immediately on receipt
        of notification of an email from the managing 18F project lead or at a future
        date as directed.
    
        - User accounts will be monitored monthly and accounts will be disabled after
        90 days of inactivity.
    
        ', i: '- System access to local EC2 instance accounts is provided only to those
        with an established need to manage servers in the Cloud Foundry environment. User
        group membership is restricted to the least privilege necessary for the user to
        accomplish their assigned duties
    
        ', j: '- User accounts will be monitored monthly and accounts will be disabled
        after 90 days of inactivity.
    
        - Linux accounts will be monitored via scripts which query the last logon date/time
        of each user account and provide the results in the form of a CSV file which an
        authorized administrator will use for the basis of disablement.
    
        - Application accounts will be monitored monthly and accounts will be disabled
        after 90 days of inactivity; this will be a manual review process, but the disablement
        will be automatic.
    
        '}
    
      # AWS/Amazon Elastic Block Store/satisfies/NIST-800-53/AC-2
      {a: '- Elastic Block Storage access is managed through the use of IAM Roles which
        grant IAM permissions to create, access, and manage block level storage using
        the following interfaces AWS Management Console and the AWS CLI.
    
        ', g: '- 18F has implemented AWS CloudWatch for its system account monitoring.
        It allows 18F to monitor AWS resources in near real-time, including Amazon EC2
        instances, Amazon EBS volumes, Elastic Load Balancers, and Amazon RDS DB instances.
        Metrics such as CPU utilization, latency, and request counts are provided automatically
        for these AWS resources. It allows 18F to supply logs or custom application and
        system metrics, such as memory usage, transaction volumes, or error rates.
    
        '}
    
      # AWS/S3/satisfies/NIST-800-53/AC-2
      {a: 'All Amazon S3 resources including buckets, objects, and related sub-resources
        (for example, lifecycle configuration and website configuration) are private,
        only the resource owner, an AWS account that created it, can access the resource
        through IAM policies granted to it.'}
    
      # AWS/Identity and Access Management/satisfies/NIST-800-53/AC-2
      {a: "AWS accounts are managed through AWS Identity and Access Management (IAM). Only\
        \ users with a need to operate the AWS management console are provided individual\
        \ AWS user accounts. The following types are used\nUser \u2013 Individual IAM\
        \ accounts\nSystem \u2013 system and application account not used for interactive\
        \ access\nThere are no guest/anonymous, groups, or temporary user accounts in\
        \ the 18F Environment\n", c: "Conditions for groups and roles membership in AWS\
        \ and Cloud Foundry are based on an established need to manage and access the\
        \ AWS and Cloud Foundry environments.  The user must meet the following the conditions\
        \ in order for the System Owner/ Project Manager to approve a group membership\
        \ request:\n  - The user\u2019s assigned role is required to access a particular\
        \ group\n  - The user has the requirements and understanding to assume permissions\
        \ associated with the group\n  - The user has completed the security role-based\
        \ training\n  - The user complies with any other group-specific conditions created\
        \ by the system owner\nOnce conditions have been met, the system owner /Project\
        \ manager will request access within GitHub 18F tracking and ticketing system.\
        \ Once approved, the DevOps group implements the request for group and role memeberships\
        \ within AWS and Cloud Foundy.\n", d: 'AWS user account creation requires approval
        by the managing 18F project
    
        lead and Cloud Foundry Information System Technical Point of Contact (Operating
    
        Environment). Prior to account creation users must have at least begun the
    
        GSA background investigative process.
    
        ', e: 'AWS/Cloud Foundry  user account creation requires approval by the managing
        18F project lead and Information System Technical Point of Contact. Prior to account
        creation users must have at least begun the GSA background investigative process
        and complete basic security awareness training.
    
        ', f: 'User account establishment, activation, modification, disablement or removal
        requires approval by the managing 18F project lead and Cloud Foundry Information
        System Technical Point of Contact (Operating Environment).
    
        Accounts will be created, enabled, modified, disabled, and removed from AWS in
        accordance with 18F/GSA policies, guidelines, requirements in NIST SP 800-37,
        and established by the 18F Project Lead and DevOps.
    
        ', i: "User and system access is provided only to those with an established need\
        \ to access and manage the AWS and Clouf Foundry environments.\nSystem access\
        \ to local EC2 instance accounts is provided only to those with an established\
        \ need to manage local services in the AWS environment. User group membership\
        \ is restricted to the least privilege necessary for the user to accomplish their\
        \ assigned duties.\nAll user accounts are issued only to those who have gained\
        \ approval by 18F DevOps. Once approved, the DevOps team creates the user account\
        \ and adds it to the appropriate role and organization.\n18F and GSA identify\
        \ authorized users of the information system and specify access rights/privileges.\
        \ 18F grants access to the information system based on:\n  1. a valid need-to-know/need-to-share\
        \ that is determined by assigned official duties and satisfying all personnel\
        \ security criteria;\n  2.  Intended system usage. 18F and GSA requires proper\
        \ identification for requests to establish information system accounts and approves\
        \ all such requests; and\n  3. Organizational or mission/business function attributes.\n",
      j: 'User accounts will be monitored monthly and accounts will be disabled after
        90 days of inactivity; this will be a manual review process every 30 days. 18F
        is in the process of automating this account management process through the use
        of implementing AWS OSQuery to trigger alerts when user accounts are inactive
        of a 90 day period.
    
        A manual review of all user accounts will be conducted on an annual basis.
    
        ', k: '18F does not allow shared/group account credentials within the AWS environment.
        All users have individual accounts to access the AWS environment. 18F has created
        specific policies that allow individual users to assume a role within the AWS
        environment listed in Table 9-1. AWS User Roles, Groups and Privileges.
    
        '}
    
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/AC-2
      {? Cloud Foundry user and role accounts are managed and maintained through the UAA
        Command Line Interface (UAAC). Cloud Foundry uses role-based access control with
        each role granting permissions in either an organization or an application space.
        The Following types are used : [Org Manager, Org Auditor, Space Manager, Space
          Developer, Space Auditor], a: '', c: "Conditions for groups and roles membership\
        \ in AWS and Cloud Foundry are based on an established need to manage and access\
        \ the AWS and Cloud Foundry environments.  The user must meet the following the\
        \ conditions in order for the System Owner/ Project Manager to approve a group\
        \ membership request:\n  - The user\u2019s assigned role is required to access\
        \ a particular group\n  - The user has the requirements and understanding to assume\
        \ permissions associated with the group\n  - The user has completed the security\
        \ role-based training\n  - The user complies with any other group-specific conditions\
        \ created by the system owner\nOnce conditions have been met, the system owner\
        \ /Project manager will request access within GitHub 18F tracking and ticketing\
        \ system. Once approved, the DevOps group implements the request for group and\
        \ role memeberships within AWS and Cloud Foundy.\n", e: 'AWS/Cloud Foundry user
        account creation requires approval by the managing 18F project lead and Information
        System Technical Point of Contact. Prior to account creation users must have at
        least begun the GSA background investigative process and complete basic security
        awareness training.
    
        ', f: 'User account establishment, activation, modification, disablement or removal
        requires approval by the managing 18F project lead and Cloud Foundry Information
        System Technical Point of Contact (Operating Environment).
    
        Accounts will be created, enabled, modified, disabled, and removed from AWS in
        accordance with 18F/GSA policies, guidelines, requirements in NIST SP 800-37,
        and established by the 18F Project Lead and DevOps.
    
        ', g: '{Missing}
    
        ', i: "User and system access is provided only to those with an established need\
        \ to access and manage the AWS and Clouf Foundry environments.\nSystem access\
        \ to local EC2 instance accounts is provided only to those with an established\
        \ need to manage local services in the AWS environment. User group membership\
        \ is restricted to the least privilege necessary for the user to accomplish their\
        \ assigned duties.\nAll user accounts are issued only to those who have gained\
        \ approval by 18F DevOps. Once approved, the DevOps team creates the user account\
        \ and adds it to the appropriate role and organization.\n18F and GSA identify\
        \ authorized users of the information system and specify access rights/privileges.\
        \ 18F grants access to the information system based on:\n  1. a valid need-to-know/need-to-share\
        \ that is determined by assigned official duties and satisfying all personnel\
        \ security criteria;\n  2.  Intended system usage. 18F and GSA requires proper\
        \ identification for requests to establish information system accounts and approves\
        \ all such requests; and\n  3. Organizational or mission/business function attributes.\n",
      j: 'User accounts will be monitored monthly and accounts will be disabled after
        90 days of inactivity; this will be a manual review process every 30 days, but
        the disablement will be automatic.
    
        A manual review of all user accounts will be conducted on an annual basis
    
        ', k: 'The Cloud Foundry platform utilizes role based access controls (RBAC) for
        group membership within the platform and does not issue shared/group account credentials.
    
        '}
    
      # CloudFoundry/Loggregator/satisfies/NIST-800-53/AC-2
      {g: "- 18F uses Steno for Cloud Foundry account logging. Steno is a shared logging\
        \ service between the DEA, Cloud Controller and Cloud Foundry components that\
        \ share a common interface for configuring logs. \n- Loggregator also referred\
        \ to as Doppler in newer versions of cf, is the Cloud Foundry component responsible\
        \ for logging, and provides a stream of log output from 18F applications and from\
        \ Cloud Foundry system components that interact with applications during updates\
        \ and execution. Loggregator allows users to:\n  - Tail their application logs.\n\
        \  - Dump a recent set of application logs (where recent is a configurable number\
        \ of log packets).\n  - Continually drain their application logs to 3rd party\
        \ log archive and analysis services (i.e Splunk, Syslog, Alien Vault USM).\n \
        \ - (Operators and administrators only) Access the firehose, which includes the\
        \ combined stream of logs from all apps, plus metrics data from CF components\n\
        - Syslog and Syslog_aggregator are used for system logging and provide a mechanism\
        \ to forward system logs via syslog to a syslog server.\n- /healthz and /varz\
        \ are HTTP endpoints provided by Cloud Foundry components used for system monitoring.\
        \ The endpoints can be polled to obtain information on a job\u2019s health and\
        \ state. \n  - /healthz is a basic check that returns an \u2018ok\u2019 message\
        \ if the job\u2019s running happily.\n  - /varz provides more detailed information\
        \ about the running job. For example, polling /varz on the uaa server returns\
        \ data about java memory usage (amongst other things).\n- The Collector is used\
        \ for monitoring and metrics by collecting data from the /health and /var endpoints.\
        \ It dynamically learns about Cloud Foundry components and polls them for monitoring\
        \ data and provides options to send monitoring data to AWS CloudWatch, Datadog,\
        \ graphite and TSDB.\n- New components have been added to the most recent version\
        \ of Cloud Foundry \n  - CF components emit metrics (e.g. the router emits HTTP\
        \ metrics, such as the time taken to service a request).\n  - These metrics are\
        \ sent to agents running on the VMs called \u2018metron\u2019.\n  - The metron\
        \ agents forward these metrics, along with application logs, to \u2018doppler\u2019\
        \ servers.\n  - The doppler servers collect and buffer the data.\n  - The loggregator\
        \ traffic controllers expose a new websocket endpoint \u2018/firehose\u2019.\n\
        \  - When you connect to /firehose, a connection is opened up to all doppler servers.\n\
        \  - All logs and metrics for all apps and components are then streamed down the\
        \ connection.\n"}
    
      # CloudFoundry/Application Security Groups/satisfies/NIST-800-53/AC-2
      {a: "- Cloud Foundry uses Application security groups (ASGs) to act as virtual firewalls\
        \ to control outbound traffic from the applications in the deployment. A security\
        \ group consists of a list of network egress access rules.\n- An administrator\
        \ can assign one or more security groups to a Cloud Foundry deployment or to a\
        \ specific space in an org within a deployment.\n- Cloud Foundry user, organization,\
        \ and application roles and security groups are documented in section 9.3 Types\
        \ of Users. \n"}
    
    AC-2 (1):
      # AWS/Amazon Virtual Private Cloud/satisfies/NIST-800-53/AC-2 (1)
      '- AWS Infrastructure as a services Account Management Life Cycle is automated to
      use AWS CLI scripts.
    
      - 18F AWS Virtual Private Cloud can use the AWS Command Line Interface (CLI) to
      automate the account management Life Cycle within its environment
    
      '
    
      # AWS/Identity and Access Management/satisfies/NIST-800-53/AC-2 (1)
      "AWS infrastructure as a service Management Life Cycle is automated to use AWS CLI\
      \ scripts. 18F AWS Virtual Private Cloud can use the AWS Command Line Interface\
      \ (CLI) to Automate the account management of LifeCycle within its envoriment. 18F\u2019\
      s Virtual Private Cloud uses the AWS command line interface to automate the account\
      \ management lifesycle within its eivironment. 18F uses the AWS IAM console for\
      \ semi-automated automated account manamgemt.\n"
    
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/AC-2 (1)
      'Cloud Foundry uses the UAA CLI which is a command line based account management system.
      This systems is currently semi-automated at this time
    
      '
    
    AC-2 (10):
    AC-2 (12):
    AC-2 (2):
      # AWS/Identity and Access Management/satisfies/NIST-800-53/AC-2 (2)
      'All Temporary accounts are handled by associating resources with IAM Roles. There
      are no guest/anonymous, group, or temporary user accounts in the 18F AWS environment.
    
      '
    
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/AC-2 (2)
      'Cloud Foundry does not contain any guest/anonymous, group, or temporary user accounts.
      DevOps only creates individual user accounts and grants role based access to users
      within Cloud Foundry.
    
      '
    
    AC-2 (3):
      # 18F/Access Control Policies for 18F/satisfies/NIST-800-53/AC-2 (3)
      '18F reviews user and system accounts for compliance with account management requirements
      at least on an annual basis.  Currently, system and user accounts are being monitored
      manually on a monthly basis and programmatically on a continuous basis.
    
      '
    
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/AC-2 (3)
      "- User accounts will be monitored monthly and accounts will be disabled after 90\
      \ days of inactivity.\n- Linux accounts will be monitored via scripts which query\
      \ the last logon date/time of each user account and provide \n"
    
      # AWS/Identity and Access Management/satisfies/NIST-800-53/AC-2 (3)
      "User accounts will be monitored monthly and accounts will be disabled after 90 days\
      \ of inactivity; this will be a manual review process every 30 days. 18F genereates\
      \ a credential report that lists all IAM users and the status of their credentials,\
      \ including passwords, access keys, and MFA devices. For passwords and access keys,\
      \ the credential report shows how recently the credentials have been used. Passwords\
      \ and access keys that have not been used recently will be reviewed for removal.\n\
      In addition to using credential reports, 18F also determines when a password or\
      \ access key was last used by using these IAM APIs:\n  - ListUsers (AWS CLI command:\
      \ aws iam list-users)\n  - GetUser (AWS CLI command: aws iam get-user)\n  - GetAccessKeyLastUsed\
      \ (AWS CLI command: aws iam get-access-key-last-used)\nA manual review of all user\
      \ accounts will be conducted on an annual basis.\n"
    
    AC-2 (4):
    AC-2 (5):
    AC-2 (7):
    AC-2 (9):
    AC-3:
      # AWS/Identity and Access Management/satisfies/NIST-800-53/AC-3
      "- 18F follows and implements AWS IAM  best practices by implementing the majority\
      \ of the following&colon;\n  - Create individual accounts for anyone that requires\
      \ access to the AWS infrastructure or APIs or use IAM federation from enterprise\
      \ identity management system\n  - Use groups or roles to assign permissions to IAM\
      \ users\n  - Enable multi factor authentication for all IAM users\n  - Use roles\
      \ for applications that run on EC2 instances\n  - Delegate by using roles instead\
      \ of sharing credentials\n  - Rotate credentials regularly\n"
    
      # CloudFoundry/Application Security Groups/satisfies/NIST-800-53/AC-3
      "- Within the CF PaaS, Cloud Foundry uses security groups to act as firewalls to control\
      \ outbound applications in the deployment. 18F uses Cloud Foundry ASGs to specify\
      \ egress access rules for its applications. This functionality enables 18F to securely\
      \ restrict application outbound traffic to predefined routes.       \n- Cloud Foundry\
      \ evaluates security groups and other network traffic rules in a strict priority\
      \ order. Cloud Foundry returns an allow, deny, or reject result for the first rule\
      \ that matches the outbound traffic request parameters, and does not evaluate any\
      \ lower-priority rules\n- Cloud Foundry implements network traffic rules using Linux\
      \ iptables on the component VMs. Operators can configure rules to prevent system\
      \ access from external networks and between internal components, and to restrict\
      \ applications from establishing connections over the DEA network interface.\n"
    
    AC-6:
      # AWS/Identity and Access Management/satisfies/NIST-800-53/AC-6
      "- AWS Identity and Access Management (IAM) Policies enables organizations with many\
      \ employees to create and manage multiple users under a single AWS Account. IAM\
      \ policies are attached to the users, enabling centralized control of permissions\
      \ for users under 18F AWS Account to access services, buckets or objects. With IAM\
      \ policies, 18F only grant users within its own AWS account permission to access\
      \ its Amazon resources.\n  - 18F AWS IAM policies are defined to grant only the\
      \ required access for 18F staff necessary to perform their functions. 18F defines\
      \ least privilege access to each user, group or role and is in the planning stages\
      \ to customize access to specific resources using an authorization policy.\n  -\
      \ Security functions within the AWS infrastructure are explicitly defined within\
      \ IAM to include read-only permissions for any user functions. Please see Table\
      \ 9-1. AWS User Roles and Privileges for all 18F IAM accounts and roles.\n  - 18F\
      \ will incorporate running the IAM Policy Simulator to test all of its policies\
      \ for least privilege access for users and groups.\n  - AWS Roles are used to allow\
      \ IAM user account and AWS services to assume only the permissions granted in order\
      \ to perform required tasks.\n"
    
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/AC-6
      "- Cloud Foundry uses Feature Flags which allows an administrator to turn on or off\
      \ sub-sections, or features, of an application without deploying new code.\n- Currently,\
      \ there are six feature flags that can be set. They are all enabled by default except\
      \ user_org_creation.\n  - `user_org_creation`&colon; When enabled, any user can\
      \ create and organization via the API.\n  - `private_domain_creation`&colon; When\
      \ enabled, and organization manager can create private domains for that organization.\n\
      \  - `app_bits_upload`&colon; When enabled, space developers can upload app bits.\n\
      \  - `app_scaling`&colon; When enabled, space developers can perform scaling operations\
      \ (i.e. change memory, disk or instances).\n  - `route_creation`&colon; When enabled,\
      \ a space developer can create routes in a space.\n  - `service_instance_creation`&colon;\
      \ When enabled, a space developer can create service instances in a space.\n- 18F\
      \ uses Orgs, Spaces, and Roles to implement least privileged access to the platform\
      \ as a service. Cloud Foundry uses role-based access control (RBAC), with each role\
      \ granting permissions in either an org or a space. Please see Table 9-2. Cloud\
      \ Foundry User Roles and Privileges. \n"
    
    AC-6 (1):
    AC-6 (10):
    AC-6 (2):
    AC-6 (5):
    AC-6 (9):
    AU-2:
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/AU-2
      {a: '- 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon EBS, and
        Amazon VPC that captures API calls and delivers the log files to an Amazon S3
        bucket. By default, all CloudTrail log files are encrypted by using Amazon S3
        server-side encryption (SSE)
    
        - With CloudTrail logging enabled, API calls made to Amazon EC2, Amazon EBS, and
        Amazon VPC actions are tracked in log files, along with any other AWS service
        records. CloudTrail determines when to create and write to a new file based on
        a specified time period and file size.
    
        ', d: '- 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon
        EBS, and Amazon VPC that captures API calls and delivers the log files to an Amazon
        S3 bucket. By default, all CloudTrail  log files are encrypted by using Amazon
        S3 server-side encryption (SSE)
    
        - When CloudTrail logging is enabled, API calls made to Amazon EC2, Amazon EBS,
        and Amazon VPC actions are tracked in log files, along with any other AWS service
        records. CloudTrail determines when to create and write to a new file based on
        a specified time period and file size
    
        '}
    
      # AWS/S3/satisfies/NIST-800-53/AU-2
      {a: '- CloudTrail delivers API call information by depositing log files in an Amazon
        S3 bucket.  Each log file can contain multiple events, and each event represents
        an API call
    
        - 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon EBS, and
        Amazon VPC that captures API calls and delivers the log files to an Amazon S3
        bucket. By default, all CloudTrail log files are encrypted by using Amazon S3
        server-side encryption (SSE)
    
        ', d: '- 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon
        EBS, and Amazon VPC that captures API calls and delivers the log files to an Amazon
        S3 bucket. By default, all CloudTrail  log files are encrypted by using Amazon
        S3 server-side encryption (SSE)
    
        '}
    
      # AWS/CloudTrail/satisfies/NIST-800-53/AU-2
      {a: "- 18F has implemented AWS CloudTrail for its account monitoring. It provides\
        \ visibility into user activity by recording API calls made on an AWS account.\
        \ CloudTrail records important information about each API call, including the\
        \ name of the API, the identity of the caller, the time of the API call, the request\
        \ parameters, and the response elements returned by the AWS service. This information\
        \ helps 18F track changes made to its AWS resources and to troubleshoot operational\
        \ issues.  \n- CloudTrail delivers API call information by depositing log files\
        \ in an Amazon S3 bucket.  Each log file can contain multiple events, and each\
        \ event represents an API call.\n", d: "- 18F has implemented AWS CloudTrail for\
        \ monitoring Amazon EC2, Amazon EBS, and Amazon VPC that captures API calls and\
        \ delivers the log files to an Amazon S3 bucket. By default, all CloudTrail  log\
        \ files are encrypted by using Amazon S3 server-side encryption (SSE)\n- When\
        \ CloudTrail logging is enabled, API calls made to Amazon EC2, Amazon EBS, and\
        \ Amazon VPC actions are tracked in log files, along with any other AWS service\
        \ records. CloudTrail determines when to create and write to a new file based\
        \ on a specified time period and file size.\n- Every log entry contains information\
        \ about who generated the request. The user identity information in the log helps\
        \  determine whether the request was made with root or IAM user credentials, with\
        \ temporary security credentials for a role or federated user, or by another AWS\
        \ service. \n- CloudTrail publish Amazon SNS notifications when new log files\
        \ are delivered for 18F staff to review upon log file delivery.\n"}
    
      # CloudFoundry/Loggregator/satisfies/NIST-800-53/AU-2
      {a: "Security Event Logging and Auditing\n  - For operators, Cloud Foundry provides\
        \ an audit trail through the bosh tasks command. This command shows all actions\
        \ that and operator has taken with the platform. Additionally, operators can redirect\
        \ Cloud Foundry component logs to a standard syslog server using the syslog_daemon_config\
        \ property in the metron_agent job of cf-release.\n  - For users, Cloud Foundry\
        \ records an audit trail of all relevant API invocations of and app. The CLI command\
        \ cf events returns this information.\n  - Loggregator/doppler, the Cloud Foundry\
        \ component responsible for logging, provides a stream of log output from hosted\
        \ applications and from Cloud Foundry system components that interact with applications\
        \ during updates and execution. Loggregator allows users to:\n    - Tail their\
        \ application logs.\n    - Dump a recent set of application logs (where recent\
        \ is a configurable number of log packets).\n    - Continually drain their application\
        \ logs to 3rd party log archive and analysis services.\n    - (Operators and administrators\
        \ only) Access the firehose, which includes the combined stream of logs from all\
        \ apps, plus metrics data from CF components.\n", d: '- For operators, Cloud Foundry
        provides an audit trail through the bosh tasks command. This command shows all
        actions that and operator has taken with the platform. Additionally, operators
        can redirect Cloud Foundry component logs to a standard syslog server using the
        syslog_daemon_config property in the metron_agent job of cf-release.
    
        - For users, Cloud Foundry records an audit trail of all relevant API invocations
        of and app. The CLI command cf events returns this information.
    
        - Loggregator, the Cloud Foundry component responsible for logging, provides a
        stream of log output from 18F applications and from Cloud Foundry system components
        that interact with your app during updates and execution.
    
        - By default, Loggregator streams logs to a terminal. 18F will drain logs to a
        third-party log management service such as AlienVault USM and AWS Cloudtrail.
    
        - Cloud Foundry gathers and stores logs in a best-effort manner. If a client is
        unable to consume log lines quickly enough, the Loggregator buffer may need to
        overwrite some lines before the client has consumed them. a syslog drain or a
        CLI tail can usually keep up with the flow of application logs.
    
        '}
    
    AU-2 (3):
    AU-6:
      # CloudFoundry/Loggregator/satisfies/NIST-800-53/AU-6
      {a: "- GSA Order CIO P 2100.1 states audit records must be reviewed frequently for\
        \ signs of unauthorized activity or other security events.\n- By default, Loggregator\
        \ streams logs to a terminal. 18F will drain logs to a third-party log management\
        \ service such as AlienVault USM and AWS CloudTrail \n- Cloud Foundry logs are\
        \ captured in multiple tables and log files.  These will be reviewed weekly and\
        \ if discovery of anomalous audit log content which appears to indicate a breach\
        \ are handled according to the GSA Security Incident Handling Guide: CIO IT Security\
        \ 01-02 Revision 7 (August 18, 2009) requirements. "}
    
    AU-6 (1):
    AU-6 (3):
    CA-8:
      # AWS/Nessus/satisfies/NIST-800-53/CA-8
      For internal penetration testing inside 18 F's Virtual Private Cloud, 18F team members
      will conduct authenticated vulnerability scans using Nessus, whitebox/greybox testing
      of the 18F environment using AWS friendly and approved assessment tools.
    ...
    
    CA-8 (1):
    CM-2 (1):
    CM-2 (3):
    CM-2 (7):
    CM-2(2):
    CM-3:
      # AWS/AWS Config/satisfies/NIST-800-53/CM-3
      {a: '- 18F uses several version control systems(i.e. AWS Config, AWS Service Catalog)
        with its templates to know exactly what changes were made, who made them, and
        when. If at any point 18F needs to reverse changes to infrastructure, you can
        use a previous version of a template.
    
        ', c: '- For changes related to the AWS infrastructure, 18F uses AWS Service Catalog,
        AWS Config, VisualOps and AlienVault USM for AWS for real-time configuration changes
        which are documented, approved and tracked within GitHub.
    
        '}
    
      # AWS/Cloud Formation/satisfies/NIST-800-53/CM-3
      '- 18F provisions its infrastructure with AWS CloudFormation, the AWS CloudFormation
      template describes exactly what resources are provisioned and their settings. Because
      these templates are text files, 18F can simply track differences in these templates
      to track changes to its infrastructure, similar to the way developers control revisions
      to source code.
    
      - 18F uses several version control systems(i.e. AWS Config, AWS Service Catalog)
      with its templates to know exactly what changes were made, who made them, and when.
      If at any point 18F needs to reverse changes to infrastructure, you can use a previous
      version of a template.
    
      '
    
      # AWS/S3/satisfies/NIST-800-53/CM-3
      {a: 'Records of configuration-controlled changes are retained for at least 1 year
        in accordance with the 18F Configuration Management policy and utilizing the 18F
        GitHub site and AWS S3 to store all changes requested, approved, disapproved,
        implemented and pending.'}
    
    CM-6:
      # AWS/Nessus/satisfies/NIST-800-53/CM-6
      {d: "Nessus and AlienVault USM Joval scans are performed at least on a quarterly basis\
        \ in the event that no enhancements or upgrades are performed. Both tools meet\
        \ NIST\u2019s SCAP 1.2 requirements, satisfying OMB Mandate M-08-22 and associated\
        \ procurement requirements. SCAP scans are performed weekly and monthly to ensure\
        \ no unauthorized changes, enhancements or upgrades are performed."}
    
      # AWS/Amazon Machine Images/satisfies/NIST-800-53/CM-6
      {a: '- DevOps and Security Engineers maintain the baseline configuration for VPC,
        EBS and AMIs.  Best practices, FISMA compliant AMIs, and hardened cloud formation
        templates are utilized as there are no benchmarks available.
    
        - The organization uses FISMA compliant and hardened AMIs within its AWS infrastructure
    
        '}
    
      # AWS/Amazon Elastic Block Store/satisfies/NIST-800-53/CM-6
      {a: '- DevOps and Security Engineers maintain the baseline configuration for VPC,
        EBS and AMIs.  Best practices, FISMA compliant AMIs are utilized as there are
        no benchmarks available.
    
        '}
    
      # AWS/S3/satisfies/NIST-800-53/CM-6
      {a: 'Updates to new BOSH stemcells are located and stored within Amazon S3 http://boshartifacts.cloudfoundry.org/file_collections?type=stemcells'}
    
      # CloudFoundry/BOSH Stemcells/satisfies/NIST-800-53/CM-6
      BOSH Stemcells are used for the standard baseline OS images and software vulnerability
      management updates. Updates to new BOSH stemcells are located and stored within
      Amazon S3. The specifications of the current release of BOSH stemcells are located
      on GitHub. DevOps implements Cloud Foundry standard BOSH stemcells for baseline
      OS configuration.
    ...
    
      # CloudFoundry/Manifests/satisfies/NIST-800-53/CM-6
      Cloud Foundry configuration settings are documented within the deployment manifest
      on the 18F GitHub and Cloud Foundry sites. DevOps implements manifest templates
      written in yml to automate deployment of multiple applications at once and the platform
      within AWS with consistency and reproducibility.
    ...
    
    CM-6 (1):
    CM-8:
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/CM-8
      {a: '- AWS Config provides a detailed inventory of all 18F AWS resources and their
        current configuration, and continuously records configuration changes (e.g., the
        value of tags on Amazon EC2 instances, ingress/egress rules of security groups,
        and Network ACL rules for VPCs).
    
        '}
    
      # AWS/AWS Config/satisfies/NIST-800-53/CM-8
      {a: '- AWS Config provides a detailed inventory of all 18F AWS resources and their
        current configuration, and continuously records configuration changes (e.g., the
        value of tags on Amazon EC2 instances, ingress/egress rules of security groups,
        and Network ACL rules for VPCs).
    
        - Using AWS Config, 18F can export a complete inventory of AWS resources with
        all configuration details, determine how a resource was configured at any point
        in time, and get notified via Amazon SNS when the configuration of a resource
        changes.
    
        - AWS Config can provide configuration snapshots, which is a point-in-time capture
        of all 18F resources and their configurations. Configuration snapshots are generated
        on demand via the AWS CLI, or API, and delivered to an Amazon S3 bucket that is
        specified
    
        '}
    
      # AWS/VisualOps/satisfies/NIST-800-53/CM-8
      {a: '- The VisualOps Cloud management tool is used to provide a visual, real-time
        and automated representation of the AWS infrastructure and applications within
        the environment.
    
        '}
    
      # AWS/S3/satisfies/NIST-800-53/CM-8
      {a: 'AWS Config can provide configuration snapshots, which is a point-in-time capture
        of all 18F resources and their configurations. Configuration snapshots are generated
        on demand via the AWS CLI, or API, and delivered to an Amazon S3 bucket that is
        specified'}
    
      # AWS/AlienVault/satisfies/NIST-800-53/CM-8
      AlienVault USM is currently deployed and used by 18F to facilitate asset management,
      along with other operations activities, on a real-time ongoing basis.
    ...
    
    CM-8 (1):
    CM-8 (3):
    CM-8 (5):
    IA-2 (1):
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/IA-2 (1)
      '- Although the EC2 instances do not natively have a MFA mechanism, to gain access
      a privileged user would need to first log into the AWS Management console and provide
      the authentication code from their AWS MFA device.
    
      '
    
      # AWS/AWS Multi-Factor Authentication/satisfies/NIST-800-53/IA-2 (1)
      '- 18F uses AWS Multi-Factor Authentication (MFA) to add an extra layer of security
      for login access to the AWS management console. With MFA enabled, all 18F users
      are prompted for a username and password, as well as the authentication code from
      their AWS MFA device.
    
      - This service has been configured for 18F administrative accounts in AWS IAM.
    
      '
    
    IA-2 (12):
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/IA-2 (12)
      '- Although the EC2 instances do not utilize PIV credentials, Agency privileged/non-privilege
      users need to first log into GSA GFEs and network using their PIV credentials, which
      does leverage x509 certificates combined with usernames and one-time passwords to
      provide multi-factor authentication.
    
      '
    
    IA-2 (2):
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/IA-2 (2)
      '- Non-privileged AWS accounts are not utilized for operating system components of
      AWS
    
      '
    
      # AWS/AWS Multi-Factor Authentication/satisfies/NIST-800-53/IA-2 (2)
      '- 18F uses AWS Multi-Factor Authentication (MFA) to add an extra layer of security
      for login access to the AWS management console. With MFA enabled, all 18F users
      are prompted for a username and password, as well as the authentication code from
      their AWS MFA device.
    
      - AWS multi-factor authentication (MFA) is implemented for non-privileged users
      of the AWS console.
    
      '
    
    PL-8:
    RA-5:
      # AWS/Nessus/satisfies/NIST-800-53/RA-5
      {a: '- Nessus will be used conduct internal scanning of its VPC and private subnets
        within the 18F Virtual Private Cloud.
    
        - 18F runs Nessus (Authenticated) scans of the Cloud Foundry environment weekly
        based on IP ranges in use. These scans include network discovery and vulnerability
        checks of operating systems, server software, and any supporting components or
        applications. Scans are automatically compared to previous scans to identify new
        vulnerabilities or changes which resolve previously identified vulnerabilities.
        Nessus reports are reviewed at least weekly and appropriate actions taken on discovery
        of vulnerabilities.
    
        - Nessus is used to run (Authenticated) scans when a new host/AMI/Stemcell is
        built.  This scan determines baseline posture used to contribute to decision of
        Production acceptance.  Additionally, this tool is used to execute CIS benchmark
        compliance scans when actively working to address configuration and hardening
        requirements.
    
        ', b: '- Nessus, and AlienVault USM for AWS utilize tools and techniques that
        promote interoperability such as Common Vulnerability Scoring System v2 (CVSS2),
        Common Platform Enumeration (CPE), and Common Vulnerability Enumeration (CVE).
        Tenable SecurityCenter is able to output reports in CyberScope format to meet
        NIST, DHS, and GSA reporting requirements.
    
        ', c: '- AlienVault USM for AWS, OWASP Zap and Tenable Nessus reports are reviewed
        and analyzed at least weekly and appropriate actions taken on discovery of vulnerabilities
        within the 18F Cloud Infrastructure and applications and from security control
        assessments conducted on its information systems.
    
        '}
    
      # AWS/Amazon Machine Images/satisfies/NIST-800-53/RA-5
      {a: '- 18F runs Nessus (Authenticated) scans of the Cloud Foundry environment weekly
        based on IP ranges in use. These scans include network discovery and vulnerability
        checks of operating systems, server software, and any supporting components or
        applications. Scans are automatically compared to previous scans to identify new
        vulnerabilities or changes which resolve previously identified vulnerabilities.
        Nessus reports are reviewed at least weekly and appropriate actions taken on discovery
        of vulnerabilities.
    
        - Nessus is used to run (Authenticated) scans when a new host/AMI/Stemcell is
        built.  This scan determines baseline posture used to contribute to decision of
        Production acceptance.  Additionally, this tool is used to execute CIS benchmark
        compliance scans when actively working to address configuration and hardening
        requirements.
    
        - OWASP Zap is used to conduct web Application scanning primarily for the OWASP
        Top 10. 18F uses it as an integrated security testing tool for finding vulnerabilities
        in web applications. 18F will provide more automated functionally of security
        tests using OWASP ZAP and Jenkins for its  software development lifecycle and
        continuous integration functions
    
        - AlienVault USM for AWS runs AWS friendly Authenticated vulnerability scans within
        the 18F AWS infrastructure and does not require permission from AWS to run scan
        within its Virtual Private Cloud (VPC)
    
        '}
    
      # AWS/OWASP Zap/satisfies/NIST-800-53/RA-5
      {a: "OWASP Zap is used to conduct web Application scanning primarily \nfor the OWASP\
        \ Top 10. 18F uses it as an integrated security testing tool for finding vulnerabilities\
        \ in web applications. 18F will provide more automated functionally of security\
        \ tests using OWASP ZAP and Jenkins for its \nsoftware development lifecycle and\
        \ continuous integration functions.\n", b: "OWASP Zap is used for web application\
        \ scanning of hosted websites \nand web based applications. It scans for the OWASP\
        \ TOP 10 vulnerabilities \nand utilize tools and techniques that promote interoperability\
        \ such \nas Common Vulnerability Scoring System v2 (CVSS2), Common Platform \n\
        Enumeration (CPE), and Common Vulnerability Enumeration (CVE). \n", c: "OWASP\
        \ Zap reports are reviewed and analyzed at least weekly and \nappropriate actions\
        \ taken on discovery of vulnerabilities within \nthe 18F Cloud Infrastructure\
        \ and applications and from security \ncontrol assessments conducted on its information\
        \ systems.\n"}
    
      # AWS/AlienVault/satisfies/NIST-800-53/RA-5
      AlienVault USM for AWS runs AWS friendly Authenticated vulnerability scans within
      the AWS infrastructure
    ...
    
    RA-5 (1):
    RA-5 (2):
    RA-5 (3):
    RA-5 (5):
    RA-5 (6):
    RA-5 (8):
    SA-11 (1):
    SC-13:
      # AWS/AlienVault/satisfies/NIST-800-53/SC-13
      AlienVault USM for AWS uses TLS v1.2 with 4096 bit keys for data in transit and connections.
    ...
    
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/SC-13
      All traffic from the public internet to the Cloud Controller and UAA happens over
      HTTPS and operators configure encryption of the identity store in the UAA
    ...
    
    SC-28 (1):
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/SC-28 (1)
      Operators configure encryption of the identity store in the UAA. When users register
      an account with the Cloud Foundry platform, the UAA, acts as the user store and
      stores user passwords in the UAA database using bcrypt. Bcrypt is a blowfish encryption
      algorithm, which enables cloud foundry to store a secure hash of your users' passwords.
    ...
    
    SC-7:
      # AWS/Sophos UTM/satisfies/NIST-800-53/SC-7
      {a: '- Sophos UTM 9 for AWS is deployed and configured on all instances
    
        ', b: '- Sophos UTM 9 Endpoint Protection is deployed and configured on all instances.
    
        '}
    
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/SC-7
      {a: "- Man in the Middle (MITM) Attacks. All of the AWS APIs are available via SSL-protected\
        \ endpoints which provide server authentication. Amazon EC2 AMIs automatically\
        \ generate new SSH host certificates on first boot and log them to the instance\u2019\
        s console. 18F can then use the secure APIs to call the console and access the\
        \ host certificates before logging into the instance for the first time. 18F uses\
        \ SSL for all interactions with AWS.\n- IP Spoofing. Amazon EC2 instances cannot\
        \ send spoofed network traffic. The AWS-controlled, host-based firewall infrastructure\
        \ will not permit an instance to send traffic with a source IP or MAC address\
        \ other than its own.\n- Amazon EC2 provides a complete firewall solution; this\
        \ mandatory inbound firewall is configured in a default deny-all mode and Amazon\
        \ EC2 customers must explicitly open the ports needed to allow inbound traffic.\
        \ The traffic may be restricted by protocol, by service port, as well as by source\
        \ IP address (individual IP or Classless Inter-Domain Routing (CIDR) block).\n"}
    
      # AWS/Amazon Virtual Private Cloud/satisfies/NIST-800-53/SC-7
      {b: "- 18F utilizes the AWS Virtual Private Cloud (VPC), which provides a private\
        \ subnet within the AWS cloud. Each VPC is configured to utilize Routing Rules,\
        \ Subnet Rules, and Security Group Rules. Each of these controls must have appropriate\
        \ rules and routes in-place before any external service is able to reach a host\
        \ within AWS.\n  - Each VPC is configured to utilize Routing Tables, and Security\
        \ Groups.  Each of these controls must have appropriate rules and routes in-place\
        \ before any external service is able to reach a host within Cloud Foundry.\n\
        \  - Sophos UTM 9 Endpoint Protection is deployed and configured on all instances.\n\
        \  - Host Based Firewall rules are enforced to provide security in depth\n  -\
        \ Each Amazon VPC is a distinct, isolated network within the cloud; network traffic\
        \ within each Amazon VPC is isolated from all other Amazon VPCs\n"}
    
      # AWS/Access Control List/satisfies/NIST-800-53/SC-7
      {a: '- ACLs, or traffic flow policies, are established on each managed interface,
        which manage and enforce the flow of traffic.
    
        '}
    
      # CloudFoundry/Application Security Groups/satisfies/NIST-800-53/SC-7
      {a: '- Cloud Foundry implements network traffic rules using Linux iptables on the
        component VMs. Operators can configure rules to prevent system access from external
        networks and between internal components, and to restrict applications from establishing
        connections over the DEA network interface.
    
        - Cloud Foundry recommends that you use Cloud Foundry ASGs to specify egress access
        rules for your applications. This functionality enables you to more securely restrict
        application outbound traffic to predefined routes.
    
        - Spoofing: If an IP, MAC, or ARP spoofing attack bypasses the physical firewall
        for the deployment, Cloud Foundry network traffic rules help prevent the attack
        from accessing application containers. Cloud Foundry uses application isolation,
        operating system restrictions, and encrypted connections to further mitigate risk.
    
        '}
    
    SC-7 (12):
    SC-7 (13):
    SC-7 (3):
    SC-7 (5):
    SI-10:
    SI-2:
      # AWS/Nessus/satisfies/NIST-800-53/SI-2
      {a: '- Flaw identification is accomplished via Nessus, AlienVault USM, OWASP Zap,
        and Code Climate static code analysis.  Nessus is a vulnerability, configuration,
        and compliance scanner.
    
        '}
    
      # AWS/OWASP Zap/satisfies/NIST-800-53/SI-2
      {a: 'OWASP Zap (Web Application scanner and penetration test tool) for monthly scanning
        of all web applications that reside within Cloud Foundry. Upon implementation
        of the application, authenticated (Web Application) scans will be run on Test
        instances of the code every major release and minor releases when the release
        contains a change with a potential security impact.  OWASP Zap reports are reviewed
        after each scan and appropriate actions taken on discovery of vulnerabilities.
    
        '}
    
      # CloudFoundry/BOSH Stemcells/satisfies/NIST-800-53/SI-2
      Cloud Foundry manages software vulnerability using releases and BOSH stemcells. New
      Cloud Foundry releases located at https:/github.com/cloudfoundry/cf-release, are
      created with updates to address code issues, while new stemcells are created with
      patches for the latest security fixes to address any underlying operating system
      issues.
    ...
    
    SI-2 (2):
    SI-2 (3):
    SI-4:
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/SI-4
      {a: '- All Cloud Foundry EC2 instances will be monitored for attacks and unauthorized
        connections through Alienvault USM
    
        ', b: '- All Cloud Foundry EC2 instances will be monitored for attacks and unauthorized
        connections through Alienvault USM
    
        '}
    
      # AWS/Amazon Machine Images/satisfies/NIST-800-53/SI-4
      {a: '- All Cloud Foundry EC2 instances will be monitored for attacks and unauthorized
        connections through Alienvault USM
    
        - AlienVault USM collects and aggregates various audit logs and alerts based on
        abnormal activity or attacks.
    
        '}
    
      # AWS/AlienVault/satisfies/NIST-800-53/SI-4
      Alienvault USM for AWS monitors for attacks and indicators of potential attacks,  unauthorized
      local, network, and remote connections using  built-in, essential security controls
      and threat intelligence
    ...
    
      # CloudFoundry/HM9000/satisfies/NIST-800-53/SI-4
      {c: "- HM9000 is essential to ensuring that apps running on Cloud Foundry remain available.\
        \ HM9000 restarts applications whenever the DEA running an app shuts down for\
        \ any reason, when Warden kills the app because it violated a quota, or when the\
        \ application process exits with a non-zero exit code\n- Cloud Foundry application\
        \ monitoring component HM9000 (Health Manager) has four core responsibilities:\n\
        - Monitor applications to determine their state (e.g. running, stopped, crashed,\
        \ etc.), version, and number of instances. HM9000 updates the actual state of\
        \ an application based on heartbeats and droplet.exited messages issued by the\
        \ DEA running the application.\n- Determine applications\u2019 expected state,\
        \ version, and number of instances. HM9000 obtains the desired state of an application\
        \ from a dump of the Cloud Controller database.\n- Reconcile the actual state\
        \ of applications with their expected state. For instance, if fewer than expected\
        \ instances are running, HM9000 will instruct the Cloud Controller to start the\
        \ appropriate number of instances.\n- Direct Cloud Controller to take action to\
        \ correct any discrepancies in the state of applications.\n"}
    
    SI-4 (1):
    SI-4 (16):
    SI-4 (2):
    SI-4 (23):
    SI-4 (4):
    SI-4 (5):
    SI-4(14):
  NIST-800-53:
    AC-1:
      # 18F/Access Control Policies for 18F/satisfies/NIST-800-53/AC-1
      {a: 'The 18F Program Office develops, documents, and disseminates to all 18F staff
        The 18F Access Control Policy which  addresses purpose, scope, roles, responsibilities,
        management commitment, coordination among organizational entities, and compliance
        and procedures to facilitate the implementation of the access control policy and
        associated access controls. The 18F accecss control policy is listed within its
        Private Github Repository that is accessible to all 18F staff.
    
        ', b: 'The 18F Program Office will review and update the current 18F Access control
        policy at least every 3 years and any documented access  procedures at least annually.
    
        '}
    
      # CloudFoundry/User Account and Authentication LDAP Integration/satisfies/NIST-800-53/AC-1
      Cloud Foundry integrates with an organization's Identity Provider (IDP) which dictates
      further account management policies.
    ...
    
    AC-14:
    AC-17:
    AC-18:
    AC-19:
    AC-2:
      # 18F/Access Control Policies for 18F/satisfies/NIST-800-53/AC-2
      {b: 'The 18F DevOps team is the assgiend account managers for all information system
        accounts. Account managers are assigned for account groups in all environments,
        determined by the Project Manager and/or the Information System Owner.
    
        ', c: '18F establishes conditions for group and role membership within the Cloud
        Foundry Platform as a service and AWS environment.
    
        ', d: 'The 18F/GSA Program Office specifies authorized users of the information
        system, group and role membership, and access authorizations (i.e., privileges)
        and other attributes (as required) for each account. Systems Onwers/ Project managers
        provide the details of what type of access is needed for an authorized authorized
        user.
    
        All accounts will be documented within their respective information systems, detailing
        their group and role membership, and access authorizations. This documentation
        will be exported by DevOps and archived for up to a year from the date of account
        creation by the managing 18F project lead and Cloud Foundry Information System
        Technical Point of Contact (Operating Environment) in accordance with best business
        and security practices.
    
        ', e: '18F requires approvals by the 18F project lead and 18F system owners for
        requests to create information system accounts. All accounts will be documented
        within the 18F Github Ticketing and Tracking systems with their respective information
        systems, detailing their group, role membership, and access authorizations.
    
        ', f: '18F creates, enables, modifies, disables, and removes information system
        accounts in accordance with the 18F access control policy and approvals from 18F
        DevOps.
    
        ', g: '18F Monitors the use of all information system accounts within its environment.
    
        ', h: "18F notifies the DevOps account managers, when accounts are no longer required,\
        \ users are terminated or transferred, and when individual\u2019s information\
        \ system usage or need-to-know changes.\nFor all environments, Account Managers,\
        \ the 18F Project Manager, and/or  Information System Owner will be notified when\
        \ accounts are no longer required, accounts are terminated or transferred, and\
        \ when individual system usage or need to know changes. Notification will be achieved\
        \ via electronic notification or other official means.\n", i: "18F authorizes\
        \ access to its information systems based on a valid access authorization from\
        \ system owners and DevOps, intended system usage within the 18F network environment,\
        \ and other attributes as required by the organization or associated missions/business\
        \ functions. This is documented within section 3 of 18F access control policy\
        \ \u201CAccess Management\u201D.\n", j: '18F reviews user and system accounts
        for compliance with account management requirements at least on an annual basis.  Currently,
        system and user accounts are being monitored manually on a monthly basis and programmatically
        on a continuous basis.
    
        ', k: '18F establishes a process for reissuing shared/group account credentials
        when individuals are removed from the group. 18F utilizes its GitHub tracking
        and ticketing system for requests to reissue and remove individuals from group
        memberships within its environment.
    
        '}
    
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/AC-2
      {a: '- Access to Amazon EC2 Linux instances are managed by the use of EC2 key pairs
        and using SSH to access the local instance on the individual Linux, or appliance
        instance. Account types include individual user and system/application user accounts.
        Shared or group accounts are not permitted outside of default accounts such as
        local Administrators or root. There are no guest/anonymous or temporary user accounts.
    
        - Operating System user groups are documented in section 9.1 Types of Users.
    
        - Initial Linux local root access is provided to AWS administrator account users
        only if they provide the key pair assigned to the Linux EC2 instance and login
        using SSH.
    
        ', f: '- Local system user account establishment, activation, modification, disablement
        or removal requires approval by the managing 18F project lead and Cloud Foundry
        Information System Technical Point of Contact (Operating Environment).
    
        ', g: '- 18F has implemented AWS CloudWatch for basic monitoring of Amazon EC2
        instances. Basic Monitoring for Amazon EC2 instances: Seven pre-selected metrics
        at five-minute frequency and three status check metrics at one-minute frequency.
    
        - 18F has implemented Detailed Monitoring for Amazon EC2 instances: All metrics
        available to Basic Monitoring at one-minute frequency. Instances with Detailed
        Monitoring enabled allow data aggregation by Amazon EC2 AMI ID and instance type.
    
        - 18F has implemented the use of Auto Scaling and Elastic Load Balancing where
        Amazon CloudWatch provides Amazon EC2 instance metrics aggregated by Auto Scaling
        groups and Elastic Load Balancers.
    
        - Monitoring data is retained for two weeks, even if AWS resources have been terminated.
        This enables 18F to quickly look back at the metrics preceding an event of interest.
    
        - Metrics are accessed in either the Amazon EC2 tab or the Amazon CloudWatch tab
        of the AWS Management Console, or by using the Amazon CloudWatch API.
    
        ', h: '- Local system user accounts will be deactivated immediately on receipt
        of notification of an email from the managing 18F project lead or at a future
        date as directed.
    
        - User accounts will be monitored monthly and accounts will be disabled after
        90 days of inactivity.
    
        ', i: '- System access to local EC2 instance accounts is provided only to those
        with an established need to manage servers in the Cloud Foundry environment. User
        group membership is restricted to the least privilege necessary for the user to
        accomplish their assigned duties
    
        ', j: '- User accounts will be monitored monthly and accounts will be disabled
        after 90 days of inactivity.
    
        - Linux accounts will be monitored via scripts which query the last logon date/time
        of each user account and provide the results in the form of a CSV file which an
        authorized administrator will use for the basis of disablement.
    
        - Application accounts will be monitored monthly and accounts will be disabled
        after 90 days of inactivity; this will be a manual review process, but the disablement
        will be automatic.
    
        '}
    
      # AWS/Amazon Elastic Block Store/satisfies/NIST-800-53/AC-2
      {a: '- Elastic Block Storage access is managed through the use of IAM Roles which
        grant IAM permissions to create, access, and manage block level storage using
        the following interfaces AWS Management Console and the AWS CLI.
    
        ', g: '- 18F has implemented AWS CloudWatch for its system account monitoring.
        It allows 18F to monitor AWS resources in near real-time, including Amazon EC2
        instances, Amazon EBS volumes, Elastic Load Balancers, and Amazon RDS DB instances.
        Metrics such as CPU utilization, latency, and request counts are provided automatically
        for these AWS resources. It allows 18F to supply logs or custom application and
        system metrics, such as memory usage, transaction volumes, or error rates.
    
        '}
    
      # AWS/S3/satisfies/NIST-800-53/AC-2
      {a: 'All Amazon S3 resources including buckets, objects, and related sub-resources
        (for example, lifecycle configuration and website configuration) are private,
        only the resource owner, an AWS account that created it, can access the resource
        through IAM policies granted to it.'}
    
      # AWS/Identity and Access Management/satisfies/NIST-800-53/AC-2
      {a: "AWS accounts are managed through AWS Identity and Access Management (IAM). Only\
        \ users with a need to operate the AWS management console are provided individual\
        \ AWS user accounts. The following types are used\nUser \u2013 Individual IAM\
        \ accounts\nSystem \u2013 system and application account not used for interactive\
        \ access\nThere are no guest/anonymous, groups, or temporary user accounts in\
        \ the 18F Environment\n", c: "Conditions for groups and roles membership in AWS\
        \ and Cloud Foundry are based on an established need to manage and access the\
        \ AWS and Cloud Foundry environments.  The user must meet the following the conditions\
        \ in order for the System Owner/ Project Manager to approve a group membership\
        \ request:\n  - The user\u2019s assigned role is required to access a particular\
        \ group\n  - The user has the requirements and understanding to assume permissions\
        \ associated with the group\n  - The user has completed the security role-based\
        \ training\n  - The user complies with any other group-specific conditions created\
        \ by the system owner\nOnce conditions have been met, the system owner /Project\
        \ manager will request access within GitHub 18F tracking and ticketing system.\
        \ Once approved, the DevOps group implements the request for group and role memeberships\
        \ within AWS and Cloud Foundy.\n", d: 'AWS user account creation requires approval
        by the managing 18F project
    
        lead and Cloud Foundry Information System Technical Point of Contact (Operating
    
        Environment). Prior to account creation users must have at least begun the
    
        GSA background investigative process.
    
        ', e: 'AWS/Cloud Foundry  user account creation requires approval by the managing
        18F project lead and Information System Technical Point of Contact. Prior to account
        creation users must have at least begun the GSA background investigative process
        and complete basic security awareness training.
    
        ', f: 'User account establishment, activation, modification, disablement or removal
        requires approval by the managing 18F project lead and Cloud Foundry Information
        System Technical Point of Contact (Operating Environment).
    
        Accounts will be created, enabled, modified, disabled, and removed from AWS in
        accordance with 18F/GSA policies, guidelines, requirements in NIST SP 800-37,
        and established by the 18F Project Lead and DevOps.
    
        ', i: "User and system access is provided only to those with an established need\
        \ to access and manage the AWS and Clouf Foundry environments.\nSystem access\
        \ to local EC2 instance accounts is provided only to those with an established\
        \ need to manage local services in the AWS environment. User group membership\
        \ is restricted to the least privilege necessary for the user to accomplish their\
        \ assigned duties.\nAll user accounts are issued only to those who have gained\
        \ approval by 18F DevOps. Once approved, the DevOps team creates the user account\
        \ and adds it to the appropriate role and organization.\n18F and GSA identify\
        \ authorized users of the information system and specify access rights/privileges.\
        \ 18F grants access to the information system based on:\n  1. a valid need-to-know/need-to-share\
        \ that is determined by assigned official duties and satisfying all personnel\
        \ security criteria;\n  2.  Intended system usage. 18F and GSA requires proper\
        \ identification for requests to establish information system accounts and approves\
        \ all such requests; and\n  3. Organizational or mission/business function attributes.\n",
      j: 'User accounts will be monitored monthly and accounts will be disabled after
        90 days of inactivity; this will be a manual review process every 30 days. 18F
        is in the process of automating this account management process through the use
        of implementing AWS OSQuery to trigger alerts when user accounts are inactive
        of a 90 day period.
    
        A manual review of all user accounts will be conducted on an annual basis.
    
        ', k: '18F does not allow shared/group account credentials within the AWS environment.
        All users have individual accounts to access the AWS environment. 18F has created
        specific policies that allow individual users to assume a role within the AWS
        environment listed in Table 9-1. AWS User Roles, Groups and Privileges.
    
        '}
    
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/AC-2
      {? Cloud Foundry user and role accounts are managed and maintained through the UAA
        Command Line Interface (UAAC). Cloud Foundry uses role-based access control with
        each role granting permissions in either an organization or an application space.
        The Following types are used : [Org Manager, Org Auditor, Space Manager, Space
          Developer, Space Auditor], a: '', c: "Conditions for groups and roles membership\
        \ in AWS and Cloud Foundry are based on an established need to manage and access\
        \ the AWS and Cloud Foundry environments.  The user must meet the following the\
        \ conditions in order for the System Owner/ Project Manager to approve a group\
        \ membership request:\n  - The user\u2019s assigned role is required to access\
        \ a particular group\n  - The user has the requirements and understanding to assume\
        \ permissions associated with the group\n  - The user has completed the security\
        \ role-based training\n  - The user complies with any other group-specific conditions\
        \ created by the system owner\nOnce conditions have been met, the system owner\
        \ /Project manager will request access within GitHub 18F tracking and ticketing\
        \ system. Once approved, the DevOps group implements the request for group and\
        \ role memeberships within AWS and Cloud Foundy.\n", e: 'AWS/Cloud Foundry user
        account creation requires approval by the managing 18F project lead and Information
        System Technical Point of Contact. Prior to account creation users must have at
        least begun the GSA background investigative process and complete basic security
        awareness training.
    
        ', f: 'User account establishment, activation, modification, disablement or removal
        requires approval by the managing 18F project lead and Cloud Foundry Information
        System Technical Point of Contact (Operating Environment).
    
        Accounts will be created, enabled, modified, disabled, and removed from AWS in
        accordance with 18F/GSA policies, guidelines, requirements in NIST SP 800-37,
        and established by the 18F Project Lead and DevOps.
    
        ', g: '{Missing}
    
        ', i: "User and system access is provided only to those with an established need\
        \ to access and manage the AWS and Clouf Foundry environments.\nSystem access\
        \ to local EC2 instance accounts is provided only to those with an established\
        \ need to manage local services in the AWS environment. User group membership\
        \ is restricted to the least privilege necessary for the user to accomplish their\
        \ assigned duties.\nAll user accounts are issued only to those who have gained\
        \ approval by 18F DevOps. Once approved, the DevOps team creates the user account\
        \ and adds it to the appropriate role and organization.\n18F and GSA identify\
        \ authorized users of the information system and specify access rights/privileges.\
        \ 18F grants access to the information system based on:\n  1. a valid need-to-know/need-to-share\
        \ that is determined by assigned official duties and satisfying all personnel\
        \ security criteria;\n  2.  Intended system usage. 18F and GSA requires proper\
        \ identification for requests to establish information system accounts and approves\
        \ all such requests; and\n  3. Organizational or mission/business function attributes.\n",
      j: 'User accounts will be monitored monthly and accounts will be disabled after
        90 days of inactivity; this will be a manual review process every 30 days, but
        the disablement will be automatic.
    
        A manual review of all user accounts will be conducted on an annual basis
    
        ', k: 'The Cloud Foundry platform utilizes role based access controls (RBAC) for
        group membership within the platform and does not issue shared/group account credentials.
    
        '}
    
      # CloudFoundry/Loggregator/satisfies/NIST-800-53/AC-2
      {g: "- 18F uses Steno for Cloud Foundry account logging. Steno is a shared logging\
        \ service between the DEA, Cloud Controller and Cloud Foundry components that\
        \ share a common interface for configuring logs. \n- Loggregator also referred\
        \ to as Doppler in newer versions of cf, is the Cloud Foundry component responsible\
        \ for logging, and provides a stream of log output from 18F applications and from\
        \ Cloud Foundry system components that interact with applications during updates\
        \ and execution. Loggregator allows users to:\n  - Tail their application logs.\n\
        \  - Dump a recent set of application logs (where recent is a configurable number\
        \ of log packets).\n  - Continually drain their application logs to 3rd party\
        \ log archive and analysis services (i.e Splunk, Syslog, Alien Vault USM).\n \
        \ - (Operators and administrators only) Access the firehose, which includes the\
        \ combined stream of logs from all apps, plus metrics data from CF components\n\
        - Syslog and Syslog_aggregator are used for system logging and provide a mechanism\
        \ to forward system logs via syslog to a syslog server.\n- /healthz and /varz\
        \ are HTTP endpoints provided by Cloud Foundry components used for system monitoring.\
        \ The endpoints can be polled to obtain information on a job\u2019s health and\
        \ state. \n  - /healthz is a basic check that returns an \u2018ok\u2019 message\
        \ if the job\u2019s running happily.\n  - /varz provides more detailed information\
        \ about the running job. For example, polling /varz on the uaa server returns\
        \ data about java memory usage (amongst other things).\n- The Collector is used\
        \ for monitoring and metrics by collecting data from the /health and /var endpoints.\
        \ It dynamically learns about Cloud Foundry components and polls them for monitoring\
        \ data and provides options to send monitoring data to AWS CloudWatch, Datadog,\
        \ graphite and TSDB.\n- New components have been added to the most recent version\
        \ of Cloud Foundry \n  - CF components emit metrics (e.g. the router emits HTTP\
        \ metrics, such as the time taken to service a request).\n  - These metrics are\
        \ sent to agents running on the VMs called \u2018metron\u2019.\n  - The metron\
        \ agents forward these metrics, along with application logs, to \u2018doppler\u2019\
        \ servers.\n  - The doppler servers collect and buffer the data.\n  - The loggregator\
        \ traffic controllers expose a new websocket endpoint \u2018/firehose\u2019.\n\
        \  - When you connect to /firehose, a connection is opened up to all doppler servers.\n\
        \  - All logs and metrics for all apps and components are then streamed down the\
        \ connection.\n"}
    
      # CloudFoundry/Application Security Groups/satisfies/NIST-800-53/AC-2
      {a: "- Cloud Foundry uses Application security groups (ASGs) to act as virtual firewalls\
        \ to control outbound traffic from the applications in the deployment. A security\
        \ group consists of a list of network egress access rules.\n- An administrator\
        \ can assign one or more security groups to a Cloud Foundry deployment or to a\
        \ specific space in an org within a deployment.\n- Cloud Foundry user, organization,\
        \ and application roles and security groups are documented in section 9.3 Types\
        \ of Users. \n"}
    
    AC-20:
    AC-22:
    AC-3:
      # AWS/Identity and Access Management/satisfies/NIST-800-53/AC-3
      "- 18F follows and implements AWS IAM  best practices by implementing the majority\
      \ of the following&colon;\n  - Create individual accounts for anyone that requires\
      \ access to the AWS infrastructure or APIs or use IAM federation from enterprise\
      \ identity management system\n  - Use groups or roles to assign permissions to IAM\
      \ users\n  - Enable multi factor authentication for all IAM users\n  - Use roles\
      \ for applications that run on EC2 instances\n  - Delegate by using roles instead\
      \ of sharing credentials\n  - Rotate credentials regularly\n"
    
      # CloudFoundry/Application Security Groups/satisfies/NIST-800-53/AC-3
      "- Within the CF PaaS, Cloud Foundry uses security groups to act as firewalls to control\
      \ outbound applications in the deployment. 18F uses Cloud Foundry ASGs to specify\
      \ egress access rules for its applications. This functionality enables 18F to securely\
      \ restrict application outbound traffic to predefined routes.       \n- Cloud Foundry\
      \ evaluates security groups and other network traffic rules in a strict priority\
      \ order. Cloud Foundry returns an allow, deny, or reject result for the first rule\
      \ that matches the outbound traffic request parameters, and does not evaluate any\
      \ lower-priority rules\n- Cloud Foundry implements network traffic rules using Linux\
      \ iptables on the component VMs. Operators can configure rules to prevent system\
      \ access from external networks and between internal components, and to restrict\
      \ applications from establishing connections over the DEA network interface.\n"
    
    AC-7:
    AC-8:
    AT-1:
      # 18F/Security Awareness Training Policy for 18F/satisfies/NIST-800-53/AT-1
      18F Policy
    ...
    
    AT-2:
    AT-3:
    AT-4:
    AU-1:
      # 18F/Audit and Accountability Policy for 18F/satisfies/NIST-800-53/AU-1
      18F Policy
    ...
    
    AU-11:
    AU-12:
    AU-2:
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/AU-2
      {a: '- 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon EBS, and
        Amazon VPC that captures API calls and delivers the log files to an Amazon S3
        bucket. By default, all CloudTrail log files are encrypted by using Amazon S3
        server-side encryption (SSE)
    
        - With CloudTrail logging enabled, API calls made to Amazon EC2, Amazon EBS, and
        Amazon VPC actions are tracked in log files, along with any other AWS service
        records. CloudTrail determines when to create and write to a new file based on
        a specified time period and file size.
    
        ', d: '- 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon
        EBS, and Amazon VPC that captures API calls and delivers the log files to an Amazon
        S3 bucket. By default, all CloudTrail  log files are encrypted by using Amazon
        S3 server-side encryption (SSE)
    
        - When CloudTrail logging is enabled, API calls made to Amazon EC2, Amazon EBS,
        and Amazon VPC actions are tracked in log files, along with any other AWS service
        records. CloudTrail determines when to create and write to a new file based on
        a specified time period and file size
    
        '}
    
      # AWS/S3/satisfies/NIST-800-53/AU-2
      {a: '- CloudTrail delivers API call information by depositing log files in an Amazon
        S3 bucket.  Each log file can contain multiple events, and each event represents
        an API call
    
        - 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon EBS, and
        Amazon VPC that captures API calls and delivers the log files to an Amazon S3
        bucket. By default, all CloudTrail log files are encrypted by using Amazon S3
        server-side encryption (SSE)
    
        ', d: '- 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon
        EBS, and Amazon VPC that captures API calls and delivers the log files to an Amazon
        S3 bucket. By default, all CloudTrail  log files are encrypted by using Amazon
        S3 server-side encryption (SSE)
    
        '}
    
      # AWS/CloudTrail/satisfies/NIST-800-53/AU-2
      {a: "- 18F has implemented AWS CloudTrail for its account monitoring. It provides\
        \ visibility into user activity by recording API calls made on an AWS account.\
        \ CloudTrail records important information about each API call, including the\
        \ name of the API, the identity of the caller, the time of the API call, the request\
        \ parameters, and the response elements returned by the AWS service. This information\
        \ helps 18F track changes made to its AWS resources and to troubleshoot operational\
        \ issues.  \n- CloudTrail delivers API call information by depositing log files\
        \ in an Amazon S3 bucket.  Each log file can contain multiple events, and each\
        \ event represents an API call.\n", d: "- 18F has implemented AWS CloudTrail for\
        \ monitoring Amazon EC2, Amazon EBS, and Amazon VPC that captures API calls and\
        \ delivers the log files to an Amazon S3 bucket. By default, all CloudTrail  log\
        \ files are encrypted by using Amazon S3 server-side encryption (SSE)\n- When\
        \ CloudTrail logging is enabled, API calls made to Amazon EC2, Amazon EBS, and\
        \ Amazon VPC actions are tracked in log files, along with any other AWS service\
        \ records. CloudTrail determines when to create and write to a new file based\
        \ on a specified time period and file size.\n- Every log entry contains information\
        \ about who generated the request. The user identity information in the log helps\
        \  determine whether the request was made with root or IAM user credentials, with\
        \ temporary security credentials for a role or federated user, or by another AWS\
        \ service. \n- CloudTrail publish Amazon SNS notifications when new log files\
        \ are delivered for 18F staff to review upon log file delivery.\n"}
    
      # CloudFoundry/Loggregator/satisfies/NIST-800-53/AU-2
      {a: "Security Event Logging and Auditing\n  - For operators, Cloud Foundry provides\
        \ an audit trail through the bosh tasks command. This command shows all actions\
        \ that and operator has taken with the platform. Additionally, operators can redirect\
        \ Cloud Foundry component logs to a standard syslog server using the syslog_daemon_config\
        \ property in the metron_agent job of cf-release.\n  - For users, Cloud Foundry\
        \ records an audit trail of all relevant API invocations of and app. The CLI command\
        \ cf events returns this information.\n  - Loggregator/doppler, the Cloud Foundry\
        \ component responsible for logging, provides a stream of log output from hosted\
        \ applications and from Cloud Foundry system components that interact with applications\
        \ during updates and execution. Loggregator allows users to:\n    - Tail their\
        \ application logs.\n    - Dump a recent set of application logs (where recent\
        \ is a configurable number of log packets).\n    - Continually drain their application\
        \ logs to 3rd party log archive and analysis services.\n    - (Operators and administrators\
        \ only) Access the firehose, which includes the combined stream of logs from all\
        \ apps, plus metrics data from CF components.\n", d: '- For operators, Cloud Foundry
        provides an audit trail through the bosh tasks command. This command shows all
        actions that and operator has taken with the platform. Additionally, operators
        can redirect Cloud Foundry component logs to a standard syslog server using the
        syslog_daemon_config property in the metron_agent job of cf-release.
    
        - For users, Cloud Foundry records an audit trail of all relevant API invocations
        of and app. The CLI command cf events returns this information.
    
        - Loggregator, the Cloud Foundry component responsible for logging, provides a
        stream of log output from 18F applications and from Cloud Foundry system components
        that interact with your app during updates and execution.
    
        - By default, Loggregator streams logs to a terminal. 18F will drain logs to a
        third-party log management service such as AlienVault USM and AWS Cloudtrail.
    
        - Cloud Foundry gathers and stores logs in a best-effort manner. If a client is
        unable to consume log lines quickly enough, the Loggregator buffer may need to
        overwrite some lines before the client has consumed them. a syslog drain or a
        CLI tail can usually keep up with the flow of application logs.
    
        '}
    
    AU-3:
    AU-4:
    AU-5:
    AU-6:
      # CloudFoundry/Loggregator/satisfies/NIST-800-53/AU-6
      {a: "- GSA Order CIO P 2100.1 states audit records must be reviewed frequently for\
        \ signs of unauthorized activity or other security events.\n- By default, Loggregator\
        \ streams logs to a terminal. 18F will drain logs to a third-party log management\
        \ service such as AlienVault USM and AWS CloudTrail \n- Cloud Foundry logs are\
        \ captured in multiple tables and log files.  These will be reviewed weekly and\
        \ if discovery of anomalous audit log content which appears to indicate a breach\
        \ are handled according to the GSA Security Incident Handling Guide: CIO IT Security\
        \ 01-02 Revision 7 (August 18, 2009) requirements. "}
    
    AU-8:
    AU-9:
    CA-1:
      # 18F/Security Assessment and Authorization Policy for 18F/satisfies/NIST-800-53/CA-1
      18F Policy
    ...
    
    CA-2:
    CA-2 (1):
    CA-3:
    CA-5:
    CA-6:
    CA-7:
    CA-9:
    CM-1:
      # 18F/Configuration Management  Policy for 18F/satisfies/NIST-800-53/CM-1
      18F Policy
    ...
    
    CM-10:
    CM-11:
    CM-2:
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/CM-2
      DevOps maintain baseline configurations for VPC, EBS, EC2 instances and AMIs. AWS
      Cloud Formation templates help 18F maintain a strict configuration management scheme
      of the cloud infrastructure. If an error or misconfiguration of the infrastructure
      or associated security mechanism (security groups, NACLs) is detected, the administrators
      can analyze the current infrastructure templates; compare with previous versions,
      and redeploy the configurations to a known and approved state.
    ...
    
      # AWS/Amazon Machine Images/satisfies/NIST-800-53/CM-2
      '- Linux instances are based on the standard AWS AMI images with configuration to
      GSA requirements based on secure configurations documented in CM-6.
    
      - AlienVault USM for AWS is provided by the vendor as a secure hardened AMI image
      that is deployed using a cloudformation template.
    
      - NIST guidance, best practices, CIS benchmarks along with standard and hardened
      Operating System AMIs have been utilized.
    
      - DevOps maintain copies of the latest Production Software Baseline, which includes
      the following elements: Manufacturer, Type, Version number, Software, Databases,
      and Stats.
    
      '
    
      # AWS/Amazon Elastic Block Store/satisfies/NIST-800-53/CM-2
      DevOps maintain baseline configurations for VPC, EBS, EC2 instances and AMIs. AWS
      Cloud Formation templates help 18F maintain a strict configuration management scheme
      of the cloud infrastructure. If an error or misconfiguration of the infrastructure
      or associated security mechanism (security groups, NACLs) is detected, the administrators
      can analyze the current infrastructure templates; compare with previous versions,
      and redeploy the configurations to a known and approved state.
    ...
    
      # AWS/Cloud Formation/satisfies/NIST-800-53/CM-2
      '- DevOps maintain baseline configurations for VPC, EBS, EC2 instances and AMIs. AWS
      Cloud Formation templates help 18F maintain a strict configuration management scheme
      of the cloud infrastructure. If an error or misconfiguration of the infrastructure
      or associated security mechanism (security groups, NACLs) is detected, the administrators
      can analyze the current infrastructure templates; compare with previous versions,
      and redeploy the configurations to a known and approved state.
    
      - AWS Cloud Formation templates are the approved baseline for all changes to the
      infrastructure and simplify provisioning and management on AWS. They provide an
      automated method to assess the status of an operational infrastructure against an
      approved baseline.
    
      '
    
      # AWS/AWS Service Catalog/satisfies/NIST-800-53/CM-2
      AWS Service Catalog allows 18F to centrally manage commonly deployed IT services,
      and helps achieve consistent governance and meet compliance requirements, while
      enabling users to quickly deploy only the approved IT services they need.
    ...
    
      # AWS/AlienVault/satisfies/NIST-800-53/CM-2
      AlienVault USM for AWS is provided by the vendor as a secure hardened AMI image that
      is deployed using a cloudformation template.
    ...
    
      # CloudFoundry/Manifests/satisfies/NIST-800-53/CM-2
      Configure UAA clients and users using a standard BOSH manifest for cloud Foundry Deployment,
      Limit and manage these clients and users as you would any other kind of privileged
      account.
    ...
    
    CM-4:
    CM-6:
      # AWS/Nessus/satisfies/NIST-800-53/CM-6
      {d: "Nessus and AlienVault USM Joval scans are performed at least on a quarterly basis\
        \ in the event that no enhancements or upgrades are performed. Both tools meet\
        \ NIST\u2019s SCAP 1.2 requirements, satisfying OMB Mandate M-08-22 and associated\
        \ procurement requirements. SCAP scans are performed weekly and monthly to ensure\
        \ no unauthorized changes, enhancements or upgrades are performed."}
    
      # AWS/Amazon Machine Images/satisfies/NIST-800-53/CM-6
      {a: '- DevOps and Security Engineers maintain the baseline configuration for VPC,
        EBS and AMIs.  Best practices, FISMA compliant AMIs, and hardened cloud formation
        templates are utilized as there are no benchmarks available.
    
        - The organization uses FISMA compliant and hardened AMIs within its AWS infrastructure
    
        '}
    
      # AWS/Amazon Elastic Block Store/satisfies/NIST-800-53/CM-6
      {a: '- DevOps and Security Engineers maintain the baseline configuration for VPC,
        EBS and AMIs.  Best practices, FISMA compliant AMIs are utilized as there are
        no benchmarks available.
    
        '}
    
      # AWS/S3/satisfies/NIST-800-53/CM-6
      {a: 'Updates to new BOSH stemcells are located and stored within Amazon S3 http://boshartifacts.cloudfoundry.org/file_collections?type=stemcells'}
    
      # CloudFoundry/BOSH Stemcells/satisfies/NIST-800-53/CM-6
      BOSH Stemcells are used for the standard baseline OS images and software vulnerability
      management updates. Updates to new BOSH stemcells are located and stored within
      Amazon S3. The specifications of the current release of BOSH stemcells are located
      on GitHub. DevOps implements Cloud Foundry standard BOSH stemcells for baseline
      OS configuration.
    ...
    
      # CloudFoundry/Manifests/satisfies/NIST-800-53/CM-6
      Cloud Foundry configuration settings are documented within the deployment manifest
      on the 18F GitHub and Cloud Foundry sites. DevOps implements manifest templates
      written in yml to automate deployment of multiple applications at once and the platform
      within AWS with consistency and reproducibility.
    ...
    
    CM-7:
    CM-8:
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/CM-8
      {a: '- AWS Config provides a detailed inventory of all 18F AWS resources and their
        current configuration, and continuously records configuration changes (e.g., the
        value of tags on Amazon EC2 instances, ingress/egress rules of security groups,
        and Network ACL rules for VPCs).
    
        '}
    
      # AWS/AWS Config/satisfies/NIST-800-53/CM-8
      {a: '- AWS Config provides a detailed inventory of all 18F AWS resources and their
        current configuration, and continuously records configuration changes (e.g., the
        value of tags on Amazon EC2 instances, ingress/egress rules of security groups,
        and Network ACL rules for VPCs).
    
        - Using AWS Config, 18F can export a complete inventory of AWS resources with
        all configuration details, determine how a resource was configured at any point
        in time, and get notified via Amazon SNS when the configuration of a resource
        changes.
    
        - AWS Config can provide configuration snapshots, which is a point-in-time capture
        of all 18F resources and their configurations. Configuration snapshots are generated
        on demand via the AWS CLI, or API, and delivered to an Amazon S3 bucket that is
        specified
    
        '}
    
      # AWS/VisualOps/satisfies/NIST-800-53/CM-8
      {a: '- The VisualOps Cloud management tool is used to provide a visual, real-time
        and automated representation of the AWS infrastructure and applications within
        the environment.
    
        '}
    
      # AWS/S3/satisfies/NIST-800-53/CM-8
      {a: 'AWS Config can provide configuration snapshots, which is a point-in-time capture
        of all 18F resources and their configurations. Configuration snapshots are generated
        on demand via the AWS CLI, or API, and delivered to an Amazon S3 bucket that is
        specified'}
    
      # AWS/AlienVault/satisfies/NIST-800-53/CM-8
      AlienVault USM is currently deployed and used by 18F to facilitate asset management,
      along with other operations activities, on a real-time ongoing basis.
    ...
    
    CP-1:
      # 18F/Contingency Planning Policy for 18F/satisfies/NIST-800-53/CP-1
      18F Policy
    ...
    
    CP-10:
    CP-2:
    CP-3:
    CP-4:
    CP-9:
    IA-1:
      # 18F/Identification and Authentication Policy for 18F/satisfies/NIST-800-53/IA-1
      18F Policy
    ...
    
    IA-2:
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/IA-2
      '- Additional temporary permission are delegated with the IAM roles usually for applications
      that run on EC2 Instanc.es in order to access AWS resources (i.e. Amazon S3 buckets,
      DynamoDB data)
    
      '
    
      # AWS/S3/satisfies/NIST-800-53/IA-2
      {a: 'Additional temporary permission are delegated with the IAM roles usually for
        applications that run on EC2 Instanc.es in order to access AWS resources (i.e.
        Amazon S3 buckets, DynamoDB data)'}
    
      # AWS/Identity and Access Management/satisfies/NIST-800-53/IA-2
      '- All users have individually unique identifiers to access and authenticate to the
      AWS environment through the AWS management console.
    
      - 18F AWS IAM users are placed into IAM roles based on their assigned roles and
      permissions
    
      - Additional temporary permission are delegated with the IAM roles usually for applications
      that run on EC2 Instanc.es in order to access AWS resources (i.e. Amazon S3 buckets,
      DynamoDB data)
    
      - All user accounts for 18F staff are maintained within the 18F AWS Environment.
    
      - Shared or group authenticators are not utilized; Service accounts are implemented
      as Managed Services Accounts within AWS.
    
      '
    
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/IA-2
      '- The UAA is the identity management service for Cloud Foundry. Its primary role
      is as an OAuth2 provider, issuing tokens for client applications to use when they
      act on behalf of Cloud Foundry users. In collaboration with the login server, it
      authenticates users with their Cloud Foundry credentials, and act as a Single Sign-On
      (SSO) service using those credentials (or others). It has endpoints for managing
      user accounts and for registering OAuth2 clients, as well as various other management
      functions.
    
      - All users have individually unique identifiers to access and authenticates  to
      the environment
    
      - Shared or group authenticators are not utilized, with the exception of a root
      administrative account. There are only two authorized users from the DevOps team
      who has access to the root administrative account. '
    
    IA-2 (1):
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/IA-2 (1)
      '- Although the EC2 instances do not natively have a MFA mechanism, to gain access
      a privileged user would need to first log into the AWS Management console and provide
      the authentication code from their AWS MFA device.
    
      '
    
      # AWS/AWS Multi-Factor Authentication/satisfies/NIST-800-53/IA-2 (1)
      '- 18F uses AWS Multi-Factor Authentication (MFA) to add an extra layer of security
      for login access to the AWS management console. With MFA enabled, all 18F users
      are prompted for a username and password, as well as the authentication code from
      their AWS MFA device.
    
      - This service has been configured for 18F administrative accounts in AWS IAM.
    
      '
    
    IA-2 (12):
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/IA-2 (12)
      '- Although the EC2 instances do not utilize PIV credentials, Agency privileged/non-privilege
      users need to first log into GSA GFEs and network using their PIV credentials, which
      does leverage x509 certificates combined with usernames and one-time passwords to
      provide multi-factor authentication.
    
      '
    
    IA-4:
    IA-5:
    IA-5 (1):
    IA-5 (11):
    IA-6:
    IA-7:
    IA-8:
    IA-8 (1):
    IA-8 (2):
    IA-8 (3):
    IA-8 (4):
    IR-1:
      # 18F/Incident Response for 18F/satisfies/NIST-800-53/IR-1
      18F Policy
    ...
    
    IR-2:
    IR-4:
    IR-5:
    IR-6:
    IR-7:
    IR-8:
    MA-1:
      # 18F/System Maintenance Policy for 18F/satisfies/NIST-800-53/MA-1
      18F Policy
    ...
    
    MA-2:
    MA-4:
    MA-5:
    MP-1:
      # 18F/Media Protection Policy for 18F/satisfies/NIST-800-53/MP-1
      18F Policy
    ...
    
    MP-2:
    MP-6:
    MP-7:
    PE-1:
      # 18F/Physical and Environmental Protection Policy for 18F/satisfies/NIST-800-53/PE-1
      18F Policy
    ...
    
    PE-12:
    PE-13:
    PE-14:
    PE-15:
    PE-16:
    PE-2:
    PE-3:
    PE-6:
    PE-8:
    PL-1:
      # 18F/Security Planning Policy for 18F/satisfies/NIST-800-53/PL-1
      18F Policy
    ...
    
    PL-2:
    PL-4:
    PS-1:
      # 18F/Personnel Security Policy for 18F/satisfies/NIST-800-53/PS-1
      18F Policy
    ...
    
    PS-2:
    PS-3:
    PS-4:
    PS-5:
    PS-6:
    PS-7:
    PS-8:
    RA-1:
      # 18F/Risk Assessment Policy for 18F/satisfies/NIST-800-53/RA-1
      18F Policy
    ...
    
    RA-2:
    RA-3:
    RA-5:
      # AWS/Nessus/satisfies/NIST-800-53/RA-5
      {a: '- Nessus will be used conduct internal scanning of its VPC and private subnets
        within the 18F Virtual Private Cloud.
    
        - 18F runs Nessus (Authenticated) scans of the Cloud Foundry environment weekly
        based on IP ranges in use. These scans include network discovery and vulnerability
        checks of operating systems, server software, and any supporting components or
        applications. Scans are automatically compared to previous scans to identify new
        vulnerabilities or changes which resolve previously identified vulnerabilities.
        Nessus reports are reviewed at least weekly and appropriate actions taken on discovery
        of vulnerabilities.
    
        - Nessus is used to run (Authenticated) scans when a new host/AMI/Stemcell is
        built.  This scan determines baseline posture used to contribute to decision of
        Production acceptance.  Additionally, this tool is used to execute CIS benchmark
        compliance scans when actively working to address configuration and hardening
        requirements.
    
        ', b: '- Nessus, and AlienVault USM for AWS utilize tools and techniques that
        promote interoperability such as Common Vulnerability Scoring System v2 (CVSS2),
        Common Platform Enumeration (CPE), and Common Vulnerability Enumeration (CVE).
        Tenable SecurityCenter is able to output reports in CyberScope format to meet
        NIST, DHS, and GSA reporting requirements.
    
        ', c: '- AlienVault USM for AWS, OWASP Zap and Tenable Nessus reports are reviewed
        and analyzed at least weekly and appropriate actions taken on discovery of vulnerabilities
        within the 18F Cloud Infrastructure and applications and from security control
        assessments conducted on its information systems.
    
        '}
    
      # AWS/Amazon Machine Images/satisfies/NIST-800-53/RA-5
      {a: '- 18F runs Nessus (Authenticated) scans of the Cloud Foundry environment weekly
        based on IP ranges in use. These scans include network discovery and vulnerability
        checks of operating systems, server software, and any supporting components or
        applications. Scans are automatically compared to previous scans to identify new
        vulnerabilities or changes which resolve previously identified vulnerabilities.
        Nessus reports are reviewed at least weekly and appropriate actions taken on discovery
        of vulnerabilities.
    
        - Nessus is used to run (Authenticated) scans when a new host/AMI/Stemcell is
        built.  This scan determines baseline posture used to contribute to decision of
        Production acceptance.  Additionally, this tool is used to execute CIS benchmark
        compliance scans when actively working to address configuration and hardening
        requirements.
    
        - OWASP Zap is used to conduct web Application scanning primarily for the OWASP
        Top 10. 18F uses it as an integrated security testing tool for finding vulnerabilities
        in web applications. 18F will provide more automated functionally of security
        tests using OWASP ZAP and Jenkins for its  software development lifecycle and
        continuous integration functions
    
        - AlienVault USM for AWS runs AWS friendly Authenticated vulnerability scans within
        the 18F AWS infrastructure and does not require permission from AWS to run scan
        within its Virtual Private Cloud (VPC)
    
        '}
    
      # AWS/OWASP Zap/satisfies/NIST-800-53/RA-5
      {a: "OWASP Zap is used to conduct web Application scanning primarily \nfor the OWASP\
        \ Top 10. 18F uses it as an integrated security testing tool for finding vulnerabilities\
        \ in web applications. 18F will provide more automated functionally of security\
        \ tests using OWASP ZAP and Jenkins for its \nsoftware development lifecycle and\
        \ continuous integration functions.\n", b: "OWASP Zap is used for web application\
        \ scanning of hosted websites \nand web based applications. It scans for the OWASP\
        \ TOP 10 vulnerabilities \nand utilize tools and techniques that promote interoperability\
        \ such \nas Common Vulnerability Scoring System v2 (CVSS2), Common Platform \n\
        Enumeration (CPE), and Common Vulnerability Enumeration (CVE). \n", c: "OWASP\
        \ Zap reports are reviewed and analyzed at least weekly and \nappropriate actions\
        \ taken on discovery of vulnerabilities within \nthe 18F Cloud Infrastructure\
        \ and applications and from security \ncontrol assessments conducted on its information\
        \ systems.\n"}
    
      # AWS/AlienVault/satisfies/NIST-800-53/RA-5
      AlienVault USM for AWS runs AWS friendly Authenticated vulnerability scans within
      the AWS infrastructure
    ...
    
    SA-1:
      # 18F/System and Services Acquisition Policy for 18F/satisfies/NIST-800-53/SA-1
      18F Policy
    ...
    
    SA-2:
    SA-3:
    SA-4:
    SA-4 (10):
    SA-5:
    SA-9:
    SC-1:
      # 18F/System and Communications Protection Policy for 18F/satisfies/NIST-800-53/SC-1
      18F Policy
    ...
    
    SC-12:
    SC-13:
      # AWS/AlienVault/satisfies/NIST-800-53/SC-13
      AlienVault USM for AWS uses TLS v1.2 with 4096 bit keys for data in transit and connections.
    ...
    
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/SC-13
      All traffic from the public internet to the Cloud Controller and UAA happens over
      HTTPS and operators configure encryption of the identity store in the UAA
    ...
    
    SC-15:
    SC-20:
    SC-21:
    SC-22:
    SC-39:
    SC-5:
    SC-7:
      # AWS/Sophos UTM/satisfies/NIST-800-53/SC-7
      {a: '- Sophos UTM 9 for AWS is deployed and configured on all instances
    
        ', b: '- Sophos UTM 9 Endpoint Protection is deployed and configured on all instances.
    
        '}
    
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/SC-7
      {a: "- Man in the Middle (MITM) Attacks. All of the AWS APIs are available via SSL-protected\
        \ endpoints which provide server authentication. Amazon EC2 AMIs automatically\
        \ generate new SSH host certificates on first boot and log them to the instance\u2019\
        s console. 18F can then use the secure APIs to call the console and access the\
        \ host certificates before logging into the instance for the first time. 18F uses\
        \ SSL for all interactions with AWS.\n- IP Spoofing. Amazon EC2 instances cannot\
        \ send spoofed network traffic. The AWS-controlled, host-based firewall infrastructure\
        \ will not permit an instance to send traffic with a source IP or MAC address\
        \ other than its own.\n- Amazon EC2 provides a complete firewall solution; this\
        \ mandatory inbound firewall is configured in a default deny-all mode and Amazon\
        \ EC2 customers must explicitly open the ports needed to allow inbound traffic.\
        \ The traffic may be restricted by protocol, by service port, as well as by source\
        \ IP address (individual IP or Classless Inter-Domain Routing (CIDR) block).\n"}
    
      # AWS/Amazon Virtual Private Cloud/satisfies/NIST-800-53/SC-7
      {b: "- 18F utilizes the AWS Virtual Private Cloud (VPC), which provides a private\
        \ subnet within the AWS cloud. Each VPC is configured to utilize Routing Rules,\
        \ Subnet Rules, and Security Group Rules. Each of these controls must have appropriate\
        \ rules and routes in-place before any external service is able to reach a host\
        \ within AWS.\n  - Each VPC is configured to utilize Routing Tables, and Security\
        \ Groups.  Each of these controls must have appropriate rules and routes in-place\
        \ before any external service is able to reach a host within Cloud Foundry.\n\
        \  - Sophos UTM 9 Endpoint Protection is deployed and configured on all instances.\n\
        \  - Host Based Firewall rules are enforced to provide security in depth\n  -\
        \ Each Amazon VPC is a distinct, isolated network within the cloud; network traffic\
        \ within each Amazon VPC is isolated from all other Amazon VPCs\n"}
    
      # AWS/Access Control List/satisfies/NIST-800-53/SC-7
      {a: '- ACLs, or traffic flow policies, are established on each managed interface,
        which manage and enforce the flow of traffic.
    
        '}
    
      # CloudFoundry/Application Security Groups/satisfies/NIST-800-53/SC-7
      {a: '- Cloud Foundry implements network traffic rules using Linux iptables on the
        component VMs. Operators can configure rules to prevent system access from external
        networks and between internal components, and to restrict applications from establishing
        connections over the DEA network interface.
    
        - Cloud Foundry recommends that you use Cloud Foundry ASGs to specify egress access
        rules for your applications. This functionality enables you to more securely restrict
        application outbound traffic to predefined routes.
    
        - Spoofing: If an IP, MAC, or ARP spoofing attack bypasses the physical firewall
        for the deployment, Cloud Foundry network traffic rules help prevent the attack
        from accessing application containers. Cloud Foundry uses application isolation,
        operating system restrictions, and encrypted connections to further mitigate risk.
    
        '}
    
    SI-1:
      # 18F/System and Information Integrity Policy for 18F/satisfies/NIST-800-53/SI-1
      18F Policy
    ...
    
    SI-12:
    SI-2:
      # AWS/Nessus/satisfies/NIST-800-53/SI-2
      {a: '- Flaw identification is accomplished via Nessus, AlienVault USM, OWASP Zap,
        and Code Climate static code analysis.  Nessus is a vulnerability, configuration,
        and compliance scanner.
    
        '}
    
      # AWS/OWASP Zap/satisfies/NIST-800-53/SI-2
      {a: 'OWASP Zap (Web Application scanner and penetration test tool) for monthly scanning
        of all web applications that reside within Cloud Foundry. Upon implementation
        of the application, authenticated (Web Application) scans will be run on Test
        instances of the code every major release and minor releases when the release
        contains a change with a potential security impact.  OWASP Zap reports are reviewed
        after each scan and appropriate actions taken on discovery of vulnerabilities.
    
        '}
    
      # CloudFoundry/BOSH Stemcells/satisfies/NIST-800-53/SI-2
      Cloud Foundry manages software vulnerability using releases and BOSH stemcells. New
      Cloud Foundry releases located at https:/github.com/cloudfoundry/cf-release, are
      created with updates to address code issues, while new stemcells are created with
      patches for the latest security fixes to address any underlying operating system
      issues.
    ...
    
    SI-3:
    SI-4:
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/SI-4
      {a: '- All Cloud Foundry EC2 instances will be monitored for attacks and unauthorized
        connections through Alienvault USM
    
        ', b: '- All Cloud Foundry EC2 instances will be monitored for attacks and unauthorized
        connections through Alienvault USM
    
        '}
    
      # AWS/Amazon Machine Images/satisfies/NIST-800-53/SI-4
      {a: '- All Cloud Foundry EC2 instances will be monitored for attacks and unauthorized
        connections through Alienvault USM
    
        - AlienVault USM collects and aggregates various audit logs and alerts based on
        abnormal activity or attacks.
    
        '}
    
      # AWS/AlienVault/satisfies/NIST-800-53/SI-4
      Alienvault USM for AWS monitors for attacks and indicators of potential attacks,  unauthorized
      local, network, and remote connections using  built-in, essential security controls
      and threat intelligence
    ...
    
      # CloudFoundry/HM9000/satisfies/NIST-800-53/SI-4
      {c: "- HM9000 is essential to ensuring that apps running on Cloud Foundry remain available.\
        \ HM9000 restarts applications whenever the DEA running an app shuts down for\
        \ any reason, when Warden kills the app because it violated a quota, or when the\
        \ application process exits with a non-zero exit code\n- Cloud Foundry application\
        \ monitoring component HM9000 (Health Manager) has four core responsibilities:\n\
        - Monitor applications to determine their state (e.g. running, stopped, crashed,\
        \ etc.), version, and number of instances. HM9000 updates the actual state of\
        \ an application based on heartbeats and droplet.exited messages issued by the\
        \ DEA running the application.\n- Determine applications\u2019 expected state,\
        \ version, and number of instances. HM9000 obtains the desired state of an application\
        \ from a dump of the Cloud Controller database.\n- Reconcile the actual state\
        \ of applications with their expected state. For instance, if fewer than expected\
        \ instances are running, HM9000 will instruct the Cloud Controller to start the\
        \ appropriate number of instances.\n- Direct Cloud Controller to take action to\
        \ correct any discrepancies in the state of applications.\n"}
    
    SI-5:
  NIST-800-53:
    AC-1:
      # 18F/Access Control Policies for 18F/satisfies/NIST-800-53/AC-1
      {a: 'The 18F Program Office develops, documents, and disseminates to all 18F staff
        The 18F Access Control Policy which  addresses purpose, scope, roles, responsibilities,
        management commitment, coordination among organizational entities, and compliance
        and procedures to facilitate the implementation of the access control policy and
        associated access controls. The 18F accecss control policy is listed within its
        Private Github Repository that is accessible to all 18F staff.
    
        ', b: 'The 18F Program Office will review and update the current 18F Access control
        policy at least every 3 years and any documented access  procedures at least annually.
    
        '}
    
      # CloudFoundry/User Account and Authentication LDAP Integration/satisfies/NIST-800-53/AC-1
      Cloud Foundry integrates with an organization's Identity Provider (IDP) which dictates
      further account management policies.
    ...
    
    AC-10:
    AC-11:
    AC-11 (1):
    AC-12:
    AC-14:
    AC-17:
    AC-17 (1):
    AC-17 (2):
    AC-17 (3):
    AC-17 (4):
    AC-17 (9):
    AC-18:
    AC-18 (1):
    AC-19:
    AC-19 (5):
    AC-2:
      # 18F/Access Control Policies for 18F/satisfies/NIST-800-53/AC-2
      {b: 'The 18F DevOps team is the assgiend account managers for all information system
        accounts. Account managers are assigned for account groups in all environments,
        determined by the Project Manager and/or the Information System Owner.
    
        ', c: '18F establishes conditions for group and role membership within the Cloud
        Foundry Platform as a service and AWS environment.
    
        ', d: 'The 18F/GSA Program Office specifies authorized users of the information
        system, group and role membership, and access authorizations (i.e., privileges)
        and other attributes (as required) for each account. Systems Onwers/ Project managers
        provide the details of what type of access is needed for an authorized authorized
        user.
    
        All accounts will be documented within their respective information systems, detailing
        their group and role membership, and access authorizations. This documentation
        will be exported by DevOps and archived for up to a year from the date of account
        creation by the managing 18F project lead and Cloud Foundry Information System
        Technical Point of Contact (Operating Environment) in accordance with best business
        and security practices.
    
        ', e: '18F requires approvals by the 18F project lead and 18F system owners for
        requests to create information system accounts. All accounts will be documented
        within the 18F Github Ticketing and Tracking systems with their respective information
        systems, detailing their group, role membership, and access authorizations.
    
        ', f: '18F creates, enables, modifies, disables, and removes information system
        accounts in accordance with the 18F access control policy and approvals from 18F
        DevOps.
    
        ', g: '18F Monitors the use of all information system accounts within its environment.
    
        ', h: "18F notifies the DevOps account managers, when accounts are no longer required,\
        \ users are terminated or transferred, and when individual\u2019s information\
        \ system usage or need-to-know changes.\nFor all environments, Account Managers,\
        \ the 18F Project Manager, and/or  Information System Owner will be notified when\
        \ accounts are no longer required, accounts are terminated or transferred, and\
        \ when individual system usage or need to know changes. Notification will be achieved\
        \ via electronic notification or other official means.\n", i: "18F authorizes\
        \ access to its information systems based on a valid access authorization from\
        \ system owners and DevOps, intended system usage within the 18F network environment,\
        \ and other attributes as required by the organization or associated missions/business\
        \ functions. This is documented within section 3 of 18F access control policy\
        \ \u201CAccess Management\u201D.\n", j: '18F reviews user and system accounts
        for compliance with account management requirements at least on an annual basis.  Currently,
        system and user accounts are being monitored manually on a monthly basis and programmatically
        on a continuous basis.
    
        ', k: '18F establishes a process for reissuing shared/group account credentials
        when individuals are removed from the group. 18F utilizes its GitHub tracking
        and ticketing system for requests to reissue and remove individuals from group
        memberships within its environment.
    
        '}
    
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/AC-2
      {a: '- Access to Amazon EC2 Linux instances are managed by the use of EC2 key pairs
        and using SSH to access the local instance on the individual Linux, or appliance
        instance. Account types include individual user and system/application user accounts.
        Shared or group accounts are not permitted outside of default accounts such as
        local Administrators or root. There are no guest/anonymous or temporary user accounts.
    
        - Operating System user groups are documented in section 9.1 Types of Users.
    
        - Initial Linux local root access is provided to AWS administrator account users
        only if they provide the key pair assigned to the Linux EC2 instance and login
        using SSH.
    
        ', f: '- Local system user account establishment, activation, modification, disablement
        or removal requires approval by the managing 18F project lead and Cloud Foundry
        Information System Technical Point of Contact (Operating Environment).
    
        ', g: '- 18F has implemented AWS CloudWatch for basic monitoring of Amazon EC2
        instances. Basic Monitoring for Amazon EC2 instances: Seven pre-selected metrics
        at five-minute frequency and three status check metrics at one-minute frequency.
    
        - 18F has implemented Detailed Monitoring for Amazon EC2 instances: All metrics
        available to Basic Monitoring at one-minute frequency. Instances with Detailed
        Monitoring enabled allow data aggregation by Amazon EC2 AMI ID and instance type.
    
        - 18F has implemented the use of Auto Scaling and Elastic Load Balancing where
        Amazon CloudWatch provides Amazon EC2 instance metrics aggregated by Auto Scaling
        groups and Elastic Load Balancers.
    
        - Monitoring data is retained for two weeks, even if AWS resources have been terminated.
        This enables 18F to quickly look back at the metrics preceding an event of interest.
    
        - Metrics are accessed in either the Amazon EC2 tab or the Amazon CloudWatch tab
        of the AWS Management Console, or by using the Amazon CloudWatch API.
    
        ', h: '- Local system user accounts will be deactivated immediately on receipt
        of notification of an email from the managing 18F project lead or at a future
        date as directed.
    
        - User accounts will be monitored monthly and accounts will be disabled after
        90 days of inactivity.
    
        ', i: '- System access to local EC2 instance accounts is provided only to those
        with an established need to manage servers in the Cloud Foundry environment. User
        group membership is restricted to the least privilege necessary for the user to
        accomplish their assigned duties
    
        ', j: '- User accounts will be monitored monthly and accounts will be disabled
        after 90 days of inactivity.
    
        - Linux accounts will be monitored via scripts which query the last logon date/time
        of each user account and provide the results in the form of a CSV file which an
        authorized administrator will use for the basis of disablement.
    
        - Application accounts will be monitored monthly and accounts will be disabled
        after 90 days of inactivity; this will be a manual review process, but the disablement
        will be automatic.
    
        '}
    
      # AWS/Amazon Elastic Block Store/satisfies/NIST-800-53/AC-2
      {a: '- Elastic Block Storage access is managed through the use of IAM Roles which
        grant IAM permissions to create, access, and manage block level storage using
        the following interfaces AWS Management Console and the AWS CLI.
    
        ', g: '- 18F has implemented AWS CloudWatch for its system account monitoring.
        It allows 18F to monitor AWS resources in near real-time, including Amazon EC2
        instances, Amazon EBS volumes, Elastic Load Balancers, and Amazon RDS DB instances.
        Metrics such as CPU utilization, latency, and request counts are provided automatically
        for these AWS resources. It allows 18F to supply logs or custom application and
        system metrics, such as memory usage, transaction volumes, or error rates.
    
        '}
    
      # AWS/S3/satisfies/NIST-800-53/AC-2
      {a: 'All Amazon S3 resources including buckets, objects, and related sub-resources
        (for example, lifecycle configuration and website configuration) are private,
        only the resource owner, an AWS account that created it, can access the resource
        through IAM policies granted to it.'}
    
      # AWS/Identity and Access Management/satisfies/NIST-800-53/AC-2
      {a: "AWS accounts are managed through AWS Identity and Access Management (IAM). Only\
        \ users with a need to operate the AWS management console are provided individual\
        \ AWS user accounts. The following types are used\nUser \u2013 Individual IAM\
        \ accounts\nSystem \u2013 system and application account not used for interactive\
        \ access\nThere are no guest/anonymous, groups, or temporary user accounts in\
        \ the 18F Environment\n", c: "Conditions for groups and roles membership in AWS\
        \ and Cloud Foundry are based on an established need to manage and access the\
        \ AWS and Cloud Foundry environments.  The user must meet the following the conditions\
        \ in order for the System Owner/ Project Manager to approve a group membership\
        \ request:\n  - The user\u2019s assigned role is required to access a particular\
        \ group\n  - The user has the requirements and understanding to assume permissions\
        \ associated with the group\n  - The user has completed the security role-based\
        \ training\n  - The user complies with any other group-specific conditions created\
        \ by the system owner\nOnce conditions have been met, the system owner /Project\
        \ manager will request access within GitHub 18F tracking and ticketing system.\
        \ Once approved, the DevOps group implements the request for group and role memeberships\
        \ within AWS and Cloud Foundy.\n", d: 'AWS user account creation requires approval
        by the managing 18F project
    
        lead and Cloud Foundry Information System Technical Point of Contact (Operating
    
        Environment). Prior to account creation users must have at least begun the
    
        GSA background investigative process.
    
        ', e: 'AWS/Cloud Foundry  user account creation requires approval by the managing
        18F project lead and Information System Technical Point of Contact. Prior to account
        creation users must have at least begun the GSA background investigative process
        and complete basic security awareness training.
    
        ', f: 'User account establishment, activation, modification, disablement or removal
        requires approval by the managing 18F project lead and Cloud Foundry Information
        System Technical Point of Contact (Operating Environment).
    
        Accounts will be created, enabled, modified, disabled, and removed from AWS in
        accordance with 18F/GSA policies, guidelines, requirements in NIST SP 800-37,
        and established by the 18F Project Lead and DevOps.
    
        ', i: "User and system access is provided only to those with an established need\
        \ to access and manage the AWS and Clouf Foundry environments.\nSystem access\
        \ to local EC2 instance accounts is provided only to those with an established\
        \ need to manage local services in the AWS environment. User group membership\
        \ is restricted to the least privilege necessary for the user to accomplish their\
        \ assigned duties.\nAll user accounts are issued only to those who have gained\
        \ approval by 18F DevOps. Once approved, the DevOps team creates the user account\
        \ and adds it to the appropriate role and organization.\n18F and GSA identify\
        \ authorized users of the information system and specify access rights/privileges.\
        \ 18F grants access to the information system based on:\n  1. a valid need-to-know/need-to-share\
        \ that is determined by assigned official duties and satisfying all personnel\
        \ security criteria;\n  2.  Intended system usage. 18F and GSA requires proper\
        \ identification for requests to establish information system accounts and approves\
        \ all such requests; and\n  3. Organizational or mission/business function attributes.\n",
      j: 'User accounts will be monitored monthly and accounts will be disabled after
        90 days of inactivity; this will be a manual review process every 30 days. 18F
        is in the process of automating this account management process through the use
        of implementing AWS OSQuery to trigger alerts when user accounts are inactive
        of a 90 day period.
    
        A manual review of all user accounts will be conducted on an annual basis.
    
        ', k: '18F does not allow shared/group account credentials within the AWS environment.
        All users have individual accounts to access the AWS environment. 18F has created
        specific policies that allow individual users to assume a role within the AWS
        environment listed in Table 9-1. AWS User Roles, Groups and Privileges.
    
        '}
    
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/AC-2
      {? Cloud Foundry user and role accounts are managed and maintained through the UAA
        Command Line Interface (UAAC). Cloud Foundry uses role-based access control with
        each role granting permissions in either an organization or an application space.
        The Following types are used : [Org Manager, Org Auditor, Space Manager, Space
          Developer, Space Auditor], a: '', c: "Conditions for groups and roles membership\
        \ in AWS and Cloud Foundry are based on an established need to manage and access\
        \ the AWS and Cloud Foundry environments.  The user must meet the following the\
        \ conditions in order for the System Owner/ Project Manager to approve a group\
        \ membership request:\n  - The user\u2019s assigned role is required to access\
        \ a particular group\n  - The user has the requirements and understanding to assume\
        \ permissions associated with the group\n  - The user has completed the security\
        \ role-based training\n  - The user complies with any other group-specific conditions\
        \ created by the system owner\nOnce conditions have been met, the system owner\
        \ /Project manager will request access within GitHub 18F tracking and ticketing\
        \ system. Once approved, the DevOps group implements the request for group and\
        \ role memeberships within AWS and Cloud Foundy.\n", e: 'AWS/Cloud Foundry user
        account creation requires approval by the managing 18F project lead and Information
        System Technical Point of Contact. Prior to account creation users must have at
        least begun the GSA background investigative process and complete basic security
        awareness training.
    
        ', f: 'User account establishment, activation, modification, disablement or removal
        requires approval by the managing 18F project lead and Cloud Foundry Information
        System Technical Point of Contact (Operating Environment).
    
        Accounts will be created, enabled, modified, disabled, and removed from AWS in
        accordance with 18F/GSA policies, guidelines, requirements in NIST SP 800-37,
        and established by the 18F Project Lead and DevOps.
    
        ', g: '{Missing}
    
        ', i: "User and system access is provided only to those with an established need\
        \ to access and manage the AWS and Clouf Foundry environments.\nSystem access\
        \ to local EC2 instance accounts is provided only to those with an established\
        \ need to manage local services in the AWS environment. User group membership\
        \ is restricted to the least privilege necessary for the user to accomplish their\
        \ assigned duties.\nAll user accounts are issued only to those who have gained\
        \ approval by 18F DevOps. Once approved, the DevOps team creates the user account\
        \ and adds it to the appropriate role and organization.\n18F and GSA identify\
        \ authorized users of the information system and specify access rights/privileges.\
        \ 18F grants access to the information system based on:\n  1. a valid need-to-know/need-to-share\
        \ that is determined by assigned official duties and satisfying all personnel\
        \ security criteria;\n  2.  Intended system usage. 18F and GSA requires proper\
        \ identification for requests to establish information system accounts and approves\
        \ all such requests; and\n  3. Organizational or mission/business function attributes.\n",
      j: 'User accounts will be monitored monthly and accounts will be disabled after
        90 days of inactivity; this will be a manual review process every 30 days, but
        the disablement will be automatic.
    
        A manual review of all user accounts will be conducted on an annual basis
    
        ', k: 'The Cloud Foundry platform utilizes role based access controls (RBAC) for
        group membership within the platform and does not issue shared/group account credentials.
    
        '}
    
      # CloudFoundry/Loggregator/satisfies/NIST-800-53/AC-2
      {g: "- 18F uses Steno for Cloud Foundry account logging. Steno is a shared logging\
        \ service between the DEA, Cloud Controller and Cloud Foundry components that\
        \ share a common interface for configuring logs. \n- Loggregator also referred\
        \ to as Doppler in newer versions of cf, is the Cloud Foundry component responsible\
        \ for logging, and provides a stream of log output from 18F applications and from\
        \ Cloud Foundry system components that interact with applications during updates\
        \ and execution. Loggregator allows users to:\n  - Tail their application logs.\n\
        \  - Dump a recent set of application logs (where recent is a configurable number\
        \ of log packets).\n  - Continually drain their application logs to 3rd party\
        \ log archive and analysis services (i.e Splunk, Syslog, Alien Vault USM).\n \
        \ - (Operators and administrators only) Access the firehose, which includes the\
        \ combined stream of logs from all apps, plus metrics data from CF components\n\
        - Syslog and Syslog_aggregator are used for system logging and provide a mechanism\
        \ to forward system logs via syslog to a syslog server.\n- /healthz and /varz\
        \ are HTTP endpoints provided by Cloud Foundry components used for system monitoring.\
        \ The endpoints can be polled to obtain information on a job\u2019s health and\
        \ state. \n  - /healthz is a basic check that returns an \u2018ok\u2019 message\
        \ if the job\u2019s running happily.\n  - /varz provides more detailed information\
        \ about the running job. For example, polling /varz on the uaa server returns\
        \ data about java memory usage (amongst other things).\n- The Collector is used\
        \ for monitoring and metrics by collecting data from the /health and /var endpoints.\
        \ It dynamically learns about Cloud Foundry components and polls them for monitoring\
        \ data and provides options to send monitoring data to AWS CloudWatch, Datadog,\
        \ graphite and TSDB.\n- New components have been added to the most recent version\
        \ of Cloud Foundry \n  - CF components emit metrics (e.g. the router emits HTTP\
        \ metrics, such as the time taken to service a request).\n  - These metrics are\
        \ sent to agents running on the VMs called \u2018metron\u2019.\n  - The metron\
        \ agents forward these metrics, along with application logs, to \u2018doppler\u2019\
        \ servers.\n  - The doppler servers collect and buffer the data.\n  - The loggregator\
        \ traffic controllers expose a new websocket endpoint \u2018/firehose\u2019.\n\
        \  - When you connect to /firehose, a connection is opened up to all doppler servers.\n\
        \  - All logs and metrics for all apps and components are then streamed down the\
        \ connection.\n"}
    
      # CloudFoundry/Application Security Groups/satisfies/NIST-800-53/AC-2
      {a: "- Cloud Foundry uses Application security groups (ASGs) to act as virtual firewalls\
        \ to control outbound traffic from the applications in the deployment. A security\
        \ group consists of a list of network egress access rules.\n- An administrator\
        \ can assign one or more security groups to a Cloud Foundry deployment or to a\
        \ specific space in an org within a deployment.\n- Cloud Foundry user, organization,\
        \ and application roles and security groups are documented in section 9.3 Types\
        \ of Users. \n"}
    
    AC-2 (1):
      # AWS/Amazon Virtual Private Cloud/satisfies/NIST-800-53/AC-2 (1)
      '- AWS Infrastructure as a services Account Management Life Cycle is automated to
      use AWS CLI scripts.
    
      - 18F AWS Virtual Private Cloud can use the AWS Command Line Interface (CLI) to
      automate the account management Life Cycle within its environment
    
      '
    
      # AWS/Identity and Access Management/satisfies/NIST-800-53/AC-2 (1)
      "AWS infrastructure as a service Management Life Cycle is automated to use AWS CLI\
      \ scripts. 18F AWS Virtual Private Cloud can use the AWS Command Line Interface\
      \ (CLI) to Automate the account management of LifeCycle within its envoriment. 18F\u2019\
      s Virtual Private Cloud uses the AWS command line interface to automate the account\
      \ management lifesycle within its eivironment. 18F uses the AWS IAM console for\
      \ semi-automated automated account manamgemt.\n"
    
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/AC-2 (1)
      'Cloud Foundry uses the UAA CLI which is a command line based account management system.
      This systems is currently semi-automated at this time
    
      '
    
    AC-2 (10):
    AC-2 (12):
    AC-2 (2):
      # AWS/Identity and Access Management/satisfies/NIST-800-53/AC-2 (2)
      'All Temporary accounts are handled by associating resources with IAM Roles. There
      are no guest/anonymous, group, or temporary user accounts in the 18F AWS environment.
    
      '
    
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/AC-2 (2)
      'Cloud Foundry does not contain any guest/anonymous, group, or temporary user accounts.
      DevOps only creates individual user accounts and grants role based access to users
      within Cloud Foundry.
    
      '
    
    AC-2 (3):
      # 18F/Access Control Policies for 18F/satisfies/NIST-800-53/AC-2 (3)
      '18F reviews user and system accounts for compliance with account management requirements
      at least on an annual basis.  Currently, system and user accounts are being monitored
      manually on a monthly basis and programmatically on a continuous basis.
    
      '
    
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/AC-2 (3)
      "- User accounts will be monitored monthly and accounts will be disabled after 90\
      \ days of inactivity.\n- Linux accounts will be monitored via scripts which query\
      \ the last logon date/time of each user account and provide \n"
    
      # AWS/Identity and Access Management/satisfies/NIST-800-53/AC-2 (3)
      "User accounts will be monitored monthly and accounts will be disabled after 90 days\
      \ of inactivity; this will be a manual review process every 30 days. 18F genereates\
      \ a credential report that lists all IAM users and the status of their credentials,\
      \ including passwords, access keys, and MFA devices. For passwords and access keys,\
      \ the credential report shows how recently the credentials have been used. Passwords\
      \ and access keys that have not been used recently will be reviewed for removal.\n\
      In addition to using credential reports, 18F also determines when a password or\
      \ access key was last used by using these IAM APIs:\n  - ListUsers (AWS CLI command:\
      \ aws iam list-users)\n  - GetUser (AWS CLI command: aws iam get-user)\n  - GetAccessKeyLastUsed\
      \ (AWS CLI command: aws iam get-access-key-last-used)\nA manual review of all user\
      \ accounts will be conducted on an annual basis.\n"
    
    AC-2 (4):
    AC-2 (5):
    AC-2 (7):
    AC-2 (9):
    AC-20:
    AC-20 (1):
    AC-20 (2):
    AC-21:
    AC-22:
    AC-3:
      # AWS/Identity and Access Management/satisfies/NIST-800-53/AC-3
      "- 18F follows and implements AWS IAM  best practices by implementing the majority\
      \ of the following&colon;\n  - Create individual accounts for anyone that requires\
      \ access to the AWS infrastructure or APIs or use IAM federation from enterprise\
      \ identity management system\n  - Use groups or roles to assign permissions to IAM\
      \ users\n  - Enable multi factor authentication for all IAM users\n  - Use roles\
      \ for applications that run on EC2 instances\n  - Delegate by using roles instead\
      \ of sharing credentials\n  - Rotate credentials regularly\n"
    
      # CloudFoundry/Application Security Groups/satisfies/NIST-800-53/AC-3
      "- Within the CF PaaS, Cloud Foundry uses security groups to act as firewalls to control\
      \ outbound applications in the deployment. 18F uses Cloud Foundry ASGs to specify\
      \ egress access rules for its applications. This functionality enables 18F to securely\
      \ restrict application outbound traffic to predefined routes.       \n- Cloud Foundry\
      \ evaluates security groups and other network traffic rules in a strict priority\
      \ order. Cloud Foundry returns an allow, deny, or reject result for the first rule\
      \ that matches the outbound traffic request parameters, and does not evaluate any\
      \ lower-priority rules\n- Cloud Foundry implements network traffic rules using Linux\
      \ iptables on the component VMs. Operators can configure rules to prevent system\
      \ access from external networks and between internal components, and to restrict\
      \ applications from establishing connections over the DEA network interface.\n"
    
    AC-4:
    AC-4 (21):
    AC-5:
    AC-6:
      # AWS/Identity and Access Management/satisfies/NIST-800-53/AC-6
      "- AWS Identity and Access Management (IAM) Policies enables organizations with many\
      \ employees to create and manage multiple users under a single AWS Account. IAM\
      \ policies are attached to the users, enabling centralized control of permissions\
      \ for users under 18F AWS Account to access services, buckets or objects. With IAM\
      \ policies, 18F only grant users within its own AWS account permission to access\
      \ its Amazon resources.\n  - 18F AWS IAM policies are defined to grant only the\
      \ required access for 18F staff necessary to perform their functions. 18F defines\
      \ least privilege access to each user, group or role and is in the planning stages\
      \ to customize access to specific resources using an authorization policy.\n  -\
      \ Security functions within the AWS infrastructure are explicitly defined within\
      \ IAM to include read-only permissions for any user functions. Please see Table\
      \ 9-1. AWS User Roles and Privileges for all 18F IAM accounts and roles.\n  - 18F\
      \ will incorporate running the IAM Policy Simulator to test all of its policies\
      \ for least privilege access for users and groups.\n  - AWS Roles are used to allow\
      \ IAM user account and AWS services to assume only the permissions granted in order\
      \ to perform required tasks.\n"
    
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/AC-6
      "- Cloud Foundry uses Feature Flags which allows an administrator to turn on or off\
      \ sub-sections, or features, of an application without deploying new code.\n- Currently,\
      \ there are six feature flags that can be set. They are all enabled by default except\
      \ user_org_creation.\n  - `user_org_creation`&colon; When enabled, any user can\
      \ create and organization via the API.\n  - `private_domain_creation`&colon; When\
      \ enabled, and organization manager can create private domains for that organization.\n\
      \  - `app_bits_upload`&colon; When enabled, space developers can upload app bits.\n\
      \  - `app_scaling`&colon; When enabled, space developers can perform scaling operations\
      \ (i.e. change memory, disk or instances).\n  - `route_creation`&colon; When enabled,\
      \ a space developer can create routes in a space.\n  - `service_instance_creation`&colon;\
      \ When enabled, a space developer can create service instances in a space.\n- 18F\
      \ uses Orgs, Spaces, and Roles to implement least privileged access to the platform\
      \ as a service. Cloud Foundry uses role-based access control (RBAC), with each role\
      \ granting permissions in either an org or a space. Please see Table 9-2. Cloud\
      \ Foundry User Roles and Privileges. \n"
    
    AC-6 (1):
    AC-6 (10):
    AC-6 (2):
    AC-6 (5):
    AC-6 (9):
    AC-7:
    AC-8:
    AT-1:
      # 18F/Security Awareness Training Policy for 18F/satisfies/NIST-800-53/AT-1
      18F Policy
    ...
    
    AT-2:
    AT-2 (2):
    AT-3:
    AT-4:
    AU-1:
      # 18F/Audit and Accountability Policy for 18F/satisfies/NIST-800-53/AU-1
      18F Policy
    ...
    
    AU-11:
    AU-12:
    AU-2:
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/AU-2
      {a: '- 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon EBS, and
        Amazon VPC that captures API calls and delivers the log files to an Amazon S3
        bucket. By default, all CloudTrail log files are encrypted by using Amazon S3
        server-side encryption (SSE)
    
        - With CloudTrail logging enabled, API calls made to Amazon EC2, Amazon EBS, and
        Amazon VPC actions are tracked in log files, along with any other AWS service
        records. CloudTrail determines when to create and write to a new file based on
        a specified time period and file size.
    
        ', d: '- 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon
        EBS, and Amazon VPC that captures API calls and delivers the log files to an Amazon
        S3 bucket. By default, all CloudTrail  log files are encrypted by using Amazon
        S3 server-side encryption (SSE)
    
        - When CloudTrail logging is enabled, API calls made to Amazon EC2, Amazon EBS,
        and Amazon VPC actions are tracked in log files, along with any other AWS service
        records. CloudTrail determines when to create and write to a new file based on
        a specified time period and file size
    
        '}
    
      # AWS/S3/satisfies/NIST-800-53/AU-2
      {a: '- CloudTrail delivers API call information by depositing log files in an Amazon
        S3 bucket.  Each log file can contain multiple events, and each event represents
        an API call
    
        - 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon EBS, and
        Amazon VPC that captures API calls and delivers the log files to an Amazon S3
        bucket. By default, all CloudTrail log files are encrypted by using Amazon S3
        server-side encryption (SSE)
    
        ', d: '- 18F has implemented AWS CloudTrail for monitoring Amazon EC2, Amazon
        EBS, and Amazon VPC that captures API calls and delivers the log files to an Amazon
        S3 bucket. By default, all CloudTrail  log files are encrypted by using Amazon
        S3 server-side encryption (SSE)
    
        '}
    
      # AWS/CloudTrail/satisfies/NIST-800-53/AU-2
      {a: "- 18F has implemented AWS CloudTrail for its account monitoring. It provides\
        \ visibility into user activity by recording API calls made on an AWS account.\
        \ CloudTrail records important information about each API call, including the\
        \ name of the API, the identity of the caller, the time of the API call, the request\
        \ parameters, and the response elements returned by the AWS service. This information\
        \ helps 18F track changes made to its AWS resources and to troubleshoot operational\
        \ issues.  \n- CloudTrail delivers API call information by depositing log files\
        \ in an Amazon S3 bucket.  Each log file can contain multiple events, and each\
        \ event represents an API call.\n", d: "- 18F has implemented AWS CloudTrail for\
        \ monitoring Amazon EC2, Amazon EBS, and Amazon VPC that captures API calls and\
        \ delivers the log files to an Amazon S3 bucket. By default, all CloudTrail  log\
        \ files are encrypted by using Amazon S3 server-side encryption (SSE)\n- When\
        \ CloudTrail logging is enabled, API calls made to Amazon EC2, Amazon EBS, and\
        \ Amazon VPC actions are tracked in log files, along with any other AWS service\
        \ records. CloudTrail determines when to create and write to a new file based\
        \ on a specified time period and file size.\n- Every log entry contains information\
        \ about who generated the request. The user identity information in the log helps\
        \  determine whether the request was made with root or IAM user credentials, with\
        \ temporary security credentials for a role or federated user, or by another AWS\
        \ service. \n- CloudTrail publish Amazon SNS notifications when new log files\
        \ are delivered for 18F staff to review upon log file delivery.\n"}
    
      # CloudFoundry/Loggregator/satisfies/NIST-800-53/AU-2
      {a: "Security Event Logging and Auditing\n  - For operators, Cloud Foundry provides\
        \ an audit trail through the bosh tasks command. This command shows all actions\
        \ that and operator has taken with the platform. Additionally, operators can redirect\
        \ Cloud Foundry component logs to a standard syslog server using the syslog_daemon_config\
        \ property in the metron_agent job of cf-release.\n  - For users, Cloud Foundry\
        \ records an audit trail of all relevant API invocations of and app. The CLI command\
        \ cf events returns this information.\n  - Loggregator/doppler, the Cloud Foundry\
        \ component responsible for logging, provides a stream of log output from hosted\
        \ applications and from Cloud Foundry system components that interact with applications\
        \ during updates and execution. Loggregator allows users to:\n    - Tail their\
        \ application logs.\n    - Dump a recent set of application logs (where recent\
        \ is a configurable number of log packets).\n    - Continually drain their application\
        \ logs to 3rd party log archive and analysis services.\n    - (Operators and administrators\
        \ only) Access the firehose, which includes the combined stream of logs from all\
        \ apps, plus metrics data from CF components.\n", d: '- For operators, Cloud Foundry
        provides an audit trail through the bosh tasks command. This command shows all
        actions that and operator has taken with the platform. Additionally, operators
        can redirect Cloud Foundry component logs to a standard syslog server using the
        syslog_daemon_config property in the metron_agent job of cf-release.
    
        - For users, Cloud Foundry records an audit trail of all relevant API invocations
        of and app. The CLI command cf events returns this information.
    
        - Loggregator, the Cloud Foundry component responsible for logging, provides a
        stream of log output from 18F applications and from Cloud Foundry system components
        that interact with your app during updates and execution.
    
        - By default, Loggregator streams logs to a terminal. 18F will drain logs to a
        third-party log management service such as AlienVault USM and AWS Cloudtrail.
    
        - Cloud Foundry gathers and stores logs in a best-effort manner. If a client is
        unable to consume log lines quickly enough, the Loggregator buffer may need to
        overwrite some lines before the client has consumed them. a syslog drain or a
        CLI tail can usually keep up with the flow of application logs.
    
        '}
    
    AU-2 (3):
    AU-3:
    AU-3 (1):
    AU-4:
    AU-5:
    AU-6:
      # CloudFoundry/Loggregator/satisfies/NIST-800-53/AU-6
      {a: "- GSA Order CIO P 2100.1 states audit records must be reviewed frequently for\
        \ signs of unauthorized activity or other security events.\n- By default, Loggregator\
        \ streams logs to a terminal. 18F will drain logs to a third-party log management\
        \ service such as AlienVault USM and AWS CloudTrail \n- Cloud Foundry logs are\
        \ captured in multiple tables and log files.  These will be reviewed weekly and\
        \ if discovery of anomalous audit log content which appears to indicate a breach\
        \ are handled according to the GSA Security Incident Handling Guide: CIO IT Security\
        \ 01-02 Revision 7 (August 18, 2009) requirements. "}
    
    AU-6 (1):
    AU-6 (3):
    AU-7:
    AU-7 (1):
    AU-8:
    AU-8 (1):
    AU-9:
    AU-9 (2):
    AU-9 (4):
    CA-1:
      # 18F/Security Assessment and Authorization Policy for 18F/satisfies/NIST-800-53/CA-1
      18F Policy
    ...
    
    CA-2:
    CA-2 (1):
    CA-2 (2):
    CA-2 (3):
    CA-3:
    CA-3 (3):
    CA-3 (5):
    CA-5:
    CA-6:
    CA-7:
    CA-7 (1):
    CA-8:
      # AWS/Nessus/satisfies/NIST-800-53/CA-8
      For internal penetration testing inside 18 F's Virtual Private Cloud, 18F team members
      will conduct authenticated vulnerability scans using Nessus, whitebox/greybox testing
      of the 18F environment using AWS friendly and approved assessment tools.
    ...
    
    CA-8 (1):
    CA-9:
    CM-1:
      # 18F/Configuration Management  Policy for 18F/satisfies/NIST-800-53/CM-1
      18F Policy
    ...
    
    CM-10:
    CM-10 (1):
    CM-11:
    CM-2:
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/CM-2
      DevOps maintain baseline configurations for VPC, EBS, EC2 instances and AMIs. AWS
      Cloud Formation templates help 18F maintain a strict configuration management scheme
      of the cloud infrastructure. If an error or misconfiguration of the infrastructure
      or associated security mechanism (security groups, NACLs) is detected, the administrators
      can analyze the current infrastructure templates; compare with previous versions,
      and redeploy the configurations to a known and approved state.
    ...
    
      # AWS/Amazon Machine Images/satisfies/NIST-800-53/CM-2
      '- Linux instances are based on the standard AWS AMI images with configuration to
      GSA requirements based on secure configurations documented in CM-6.
    
      - AlienVault USM for AWS is provided by the vendor as a secure hardened AMI image
      that is deployed using a cloudformation template.
    
      - NIST guidance, best practices, CIS benchmarks along with standard and hardened
      Operating System AMIs have been utilized.
    
      - DevOps maintain copies of the latest Production Software Baseline, which includes
      the following elements: Manufacturer, Type, Version number, Software, Databases,
      and Stats.
    
      '
    
      # AWS/Amazon Elastic Block Store/satisfies/NIST-800-53/CM-2
      DevOps maintain baseline configurations for VPC, EBS, EC2 instances and AMIs. AWS
      Cloud Formation templates help 18F maintain a strict configuration management scheme
      of the cloud infrastructure. If an error or misconfiguration of the infrastructure
      or associated security mechanism (security groups, NACLs) is detected, the administrators
      can analyze the current infrastructure templates; compare with previous versions,
      and redeploy the configurations to a known and approved state.
    ...
    
      # AWS/Cloud Formation/satisfies/NIST-800-53/CM-2
      '- DevOps maintain baseline configurations for VPC, EBS, EC2 instances and AMIs. AWS
      Cloud Formation templates help 18F maintain a strict configuration management scheme
      of the cloud infrastructure. If an error or misconfiguration of the infrastructure
      or associated security mechanism (security groups, NACLs) is detected, the administrators
      can analyze the current infrastructure templates; compare with previous versions,
      and redeploy the configurations to a known and approved state.
    
      - AWS Cloud Formation templates are the approved baseline for all changes to the
      infrastructure and simplify provisioning and management on AWS. They provide an
      automated method to assess the status of an operational infrastructure against an
      approved baseline.
    
      '
    
      # AWS/AWS Service Catalog/satisfies/NIST-800-53/CM-2
      AWS Service Catalog allows 18F to centrally manage commonly deployed IT services,
      and helps achieve consistent governance and meet compliance requirements, while
      enabling users to quickly deploy only the approved IT services they need.
    ...
    
      # AWS/AlienVault/satisfies/NIST-800-53/CM-2
      AlienVault USM for AWS is provided by the vendor as a secure hardened AMI image that
      is deployed using a cloudformation template.
    ...
    
      # CloudFoundry/Manifests/satisfies/NIST-800-53/CM-2
      Configure UAA clients and users using a standard BOSH manifest for cloud Foundry Deployment,
      Limit and manage these clients and users as you would any other kind of privileged
      account.
    ...
    
    CM-2 (1):
    CM-2 (3):
    CM-2 (7):
    CM-2(2):
    CM-3:
      # AWS/AWS Config/satisfies/NIST-800-53/CM-3
      {a: '- 18F uses several version control systems(i.e. AWS Config, AWS Service Catalog)
        with its templates to know exactly what changes were made, who made them, and
        when. If at any point 18F needs to reverse changes to infrastructure, you can
        use a previous version of a template.
    
        ', c: '- For changes related to the AWS infrastructure, 18F uses AWS Service Catalog,
        AWS Config, VisualOps and AlienVault USM for AWS for real-time configuration changes
        which are documented, approved and tracked within GitHub.
    
        '}
    
      # AWS/Cloud Formation/satisfies/NIST-800-53/CM-3
      '- 18F provisions its infrastructure with AWS CloudFormation, the AWS CloudFormation
      template describes exactly what resources are provisioned and their settings. Because
      these templates are text files, 18F can simply track differences in these templates
      to track changes to its infrastructure, similar to the way developers control revisions
      to source code.
    
      - 18F uses several version control systems(i.e. AWS Config, AWS Service Catalog)
      with its templates to know exactly what changes were made, who made them, and when.
      If at any point 18F needs to reverse changes to infrastructure, you can use a previous
      version of a template.
    
      '
    
      # AWS/S3/satisfies/NIST-800-53/CM-3
      {a: 'Records of configuration-controlled changes are retained for at least 1 year
        in accordance with the 18F Configuration Management policy and utilizing the 18F
        GitHub site and AWS S3 to store all changes requested, approved, disapproved,
        implemented and pending.'}
    
    CM-4:
    CM-5:
    CM-5 (1):
    CM-5 (3):
    CM-5 (5):
    CM-6:
      # AWS/Nessus/satisfies/NIST-800-53/CM-6
      {d: "Nessus and AlienVault USM Joval scans are performed at least on a quarterly basis\
        \ in the event that no enhancements or upgrades are performed. Both tools meet\
        \ NIST\u2019s SCAP 1.2 requirements, satisfying OMB Mandate M-08-22 and associated\
        \ procurement requirements. SCAP scans are performed weekly and monthly to ensure\
        \ no unauthorized changes, enhancements or upgrades are performed."}
    
      # AWS/Amazon Machine Images/satisfies/NIST-800-53/CM-6
      {a: '- DevOps and Security Engineers maintain the baseline configuration for VPC,
        EBS and AMIs.  Best practices, FISMA compliant AMIs, and hardened cloud formation
        templates are utilized as there are no benchmarks available.
    
        - The organization uses FISMA compliant and hardened AMIs within its AWS infrastructure
    
        '}
    
      # AWS/Amazon Elastic Block Store/satisfies/NIST-800-53/CM-6
      {a: '- DevOps and Security Engineers maintain the baseline configuration for VPC,
        EBS and AMIs.  Best practices, FISMA compliant AMIs are utilized as there are
        no benchmarks available.
    
        '}
    
      # AWS/S3/satisfies/NIST-800-53/CM-6
      {a: 'Updates to new BOSH stemcells are located and stored within Amazon S3 http://boshartifacts.cloudfoundry.org/file_collections?type=stemcells'}
    
      # CloudFoundry/BOSH Stemcells/satisfies/NIST-800-53/CM-6
      BOSH Stemcells are used for the standard baseline OS images and software vulnerability
      management updates. Updates to new BOSH stemcells are located and stored within
      Amazon S3. The specifications of the current release of BOSH stemcells are located
      on GitHub. DevOps implements Cloud Foundry standard BOSH stemcells for baseline
      OS configuration.
    ...
    
      # CloudFoundry/Manifests/satisfies/NIST-800-53/CM-6
      Cloud Foundry configuration settings are documented within the deployment manifest
      on the 18F GitHub and Cloud Foundry sites. DevOps implements manifest templates
      written in yml to automate deployment of multiple applications at once and the platform
      within AWS with consistency and reproducibility.
    ...
    
    CM-6 (1):
    CM-7:
    CM-7 (1):
    CM-7 (2):
    CM-7 (5):
    CM-8:
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/CM-8
      {a: '- AWS Config provides a detailed inventory of all 18F AWS resources and their
        current configuration, and continuously records configuration changes (e.g., the
        value of tags on Amazon EC2 instances, ingress/egress rules of security groups,
        and Network ACL rules for VPCs).
    
        '}
    
      # AWS/AWS Config/satisfies/NIST-800-53/CM-8
      {a: '- AWS Config provides a detailed inventory of all 18F AWS resources and their
        current configuration, and continuously records configuration changes (e.g., the
        value of tags on Amazon EC2 instances, ingress/egress rules of security groups,
        and Network ACL rules for VPCs).
    
        - Using AWS Config, 18F can export a complete inventory of AWS resources with
        all configuration details, determine how a resource was configured at any point
        in time, and get notified via Amazon SNS when the configuration of a resource
        changes.
    
        - AWS Config can provide configuration snapshots, which is a point-in-time capture
        of all 18F resources and their configurations. Configuration snapshots are generated
        on demand via the AWS CLI, or API, and delivered to an Amazon S3 bucket that is
        specified
    
        '}
    
      # AWS/VisualOps/satisfies/NIST-800-53/CM-8
      {a: '- The VisualOps Cloud management tool is used to provide a visual, real-time
        and automated representation of the AWS infrastructure and applications within
        the environment.
    
        '}
    
      # AWS/S3/satisfies/NIST-800-53/CM-8
      {a: 'AWS Config can provide configuration snapshots, which is a point-in-time capture
        of all 18F resources and their configurations. Configuration snapshots are generated
        on demand via the AWS CLI, or API, and delivered to an Amazon S3 bucket that is
        specified'}
    
      # AWS/AlienVault/satisfies/NIST-800-53/CM-8
      AlienVault USM is currently deployed and used by 18F to facilitate asset management,
      along with other operations activities, on a real-time ongoing basis.
    ...
    
    CM-8 (1):
    CM-8 (3):
    CM-8 (5):
    CM-9:
    CP-1:
      # 18F/Contingency Planning Policy for 18F/satisfies/NIST-800-53/CP-1
      18F Policy
    ...
    
    CP-10:
    CP-10 (2):
    CP-2:
    CP-2 (1):
    CP-2 (2):
    CP-2 (3):
    CP-2 (8):
    CP-3:
    CP-4:
    CP-4 (1):
    CP-6:
    CP-6 (1):
    CP-6 (3):
    CP-7:
    CP-7 (1):
    CP-7 (2):
    CP-7 (3):
    CP-8:
    CP-8 (1):
    CP-8 (2):
    CP-9:
    CP-9 (1):
    CP-9 (3):
    IA-1:
      # 18F/Identification and Authentication Policy for 18F/satisfies/NIST-800-53/IA-1
      18F Policy
    ...
    
    IA-2:
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/IA-2
      '- Additional temporary permission are delegated with the IAM roles usually for applications
      that run on EC2 Instanc.es in order to access AWS resources (i.e. Amazon S3 buckets,
      DynamoDB data)
    
      '
    
      # AWS/S3/satisfies/NIST-800-53/IA-2
      {a: 'Additional temporary permission are delegated with the IAM roles usually for
        applications that run on EC2 Instanc.es in order to access AWS resources (i.e.
        Amazon S3 buckets, DynamoDB data)'}
    
      # AWS/Identity and Access Management/satisfies/NIST-800-53/IA-2
      '- All users have individually unique identifiers to access and authenticate to the
      AWS environment through the AWS management console.
    
      - 18F AWS IAM users are placed into IAM roles based on their assigned roles and
      permissions
    
      - Additional temporary permission are delegated with the IAM roles usually for applications
      that run on EC2 Instanc.es in order to access AWS resources (i.e. Amazon S3 buckets,
      DynamoDB data)
    
      - All user accounts for 18F staff are maintained within the 18F AWS Environment.
    
      - Shared or group authenticators are not utilized; Service accounts are implemented
      as Managed Services Accounts within AWS.
    
      '
    
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/IA-2
      '- The UAA is the identity management service for Cloud Foundry. Its primary role
      is as an OAuth2 provider, issuing tokens for client applications to use when they
      act on behalf of Cloud Foundry users. In collaboration with the login server, it
      authenticates users with their Cloud Foundry credentials, and act as a Single Sign-On
      (SSO) service using those credentials (or others). It has endpoints for managing
      user accounts and for registering OAuth2 clients, as well as various other management
      functions.
    
      - All users have individually unique identifiers to access and authenticates  to
      the environment
    
      - Shared or group authenticators are not utilized, with the exception of a root
      administrative account. There are only two authorized users from the DevOps team
      who has access to the root administrative account. '
    
    IA-2 (1):
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/IA-2 (1)
      '- Although the EC2 instances do not natively have a MFA mechanism, to gain access
      a privileged user would need to first log into the AWS Management console and provide
      the authentication code from their AWS MFA device.
    
      '
    
      # AWS/AWS Multi-Factor Authentication/satisfies/NIST-800-53/IA-2 (1)
      '- 18F uses AWS Multi-Factor Authentication (MFA) to add an extra layer of security
      for login access to the AWS management console. With MFA enabled, all 18F users
      are prompted for a username and password, as well as the authentication code from
      their AWS MFA device.
    
      - This service has been configured for 18F administrative accounts in AWS IAM.
    
      '
    
    IA-2 (11):
    IA-2 (12):
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/IA-2 (12)
      '- Although the EC2 instances do not utilize PIV credentials, Agency privileged/non-privilege
      users need to first log into GSA GFEs and network using their PIV credentials, which
      does leverage x509 certificates combined with usernames and one-time passwords to
      provide multi-factor authentication.
    
      '
    
    IA-2 (2):
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/IA-2 (2)
      '- Non-privileged AWS accounts are not utilized for operating system components of
      AWS
    
      '
    
      # AWS/AWS Multi-Factor Authentication/satisfies/NIST-800-53/IA-2 (2)
      '- 18F uses AWS Multi-Factor Authentication (MFA) to add an extra layer of security
      for login access to the AWS management console. With MFA enabled, all 18F users
      are prompted for a username and password, as well as the authentication code from
      their AWS MFA device.
    
      - AWS multi-factor authentication (MFA) is implemented for non-privileged users
      of the AWS console.
    
      '
    
    IA-2 (3):
    IA-2 (5):
    IA-2 (8):
    IA-3:
    IA-4:
    IA-4 (4):
    IA-5:
    IA-5 (1):
    IA-5 (11):
    IA-5 (2):
    IA-5 (3):
    IA-5 (4):
    IA-5 (6):
    IA-5 (7):
    IA-6:
    IA-7:
    IA-8:
    IA-8 (1):
    IA-8 (2):
    IA-8 (3):
    IA-8 (4):
    IR-1:
      # 18F/Incident Response for 18F/satisfies/NIST-800-53/IR-1
      18F Policy
    ...
    
    IR-2:
    IR-3:
    IR-3 (2):
    IR-4:
    IR-4 (1):
    IR-5:
    IR-6:
    IR-6 (1):
    IR-7:
    IR-7 (1):
    IR-7 (2):
    IR-8:
    IR-9:
    IR-9 (1):
    IR-9 (2):
    IR-9 (3):
    IR-9 (4):
    MA-1:
      # 18F/System Maintenance Policy for 18F/satisfies/NIST-800-53/MA-1
      18F Policy
    ...
    
    MA-2:
    MA-3:
    MA-3 (1):
    MA-3 (2):
    MA-3 (3):
    MA-4:
    MA-4 (2):
    MA-5:
    MA-5 (1):
    MA-6:
    MP-1:
      # 18F/Media Protection Policy for 18F/satisfies/NIST-800-53/MP-1
      18F Policy
    ...
    
    MP-2:
    MP-3:
    MP-4:
    MP-5:
    MP-5 (4):
    MP-6:
    MP-6 (2):
    MP-7:
    MP-7 (1):
    PE-1:
      # 18F/Physical and Environmental Protection Policy for 18F/satisfies/NIST-800-53/PE-1
      18F Policy
    ...
    
    PE-10:
    PE-11:
    PE-12:
    PE-13:
    PE-13 (2):
    PE-13 (3):
    PE-14:
    PE-14 (2):
    PE-15:
    PE-16:
    PE-17:
    PE-2:
    PE-3:
    PE-4:
    PE-5:
    PE-6:
    PE-6 (1):
    PE-8:
    PE-9:
    PL-1:
      # 18F/Security Planning Policy for 18F/satisfies/NIST-800-53/PL-1
      18F Policy
    ...
    
    PL-2:
    PL-2 (3):
    PL-4:
    PL-4 (1):
    PL-8:
    PS-1:
      # 18F/Personnel Security Policy for 18F/satisfies/NIST-800-53/PS-1
      18F Policy
    ...
    
    PS-2:
    PS-3:
    PS-3 (3):
    PS-4:
    PS-5:
    PS-6:
    PS-7:
    PS-8:
    RA-1:
      # 18F/Risk Assessment Policy for 18F/satisfies/NIST-800-53/RA-1
      18F Policy
    ...
    
    RA-2:
    RA-3:
    RA-5:
      # AWS/Nessus/satisfies/NIST-800-53/RA-5
      {a: '- Nessus will be used conduct internal scanning of its VPC and private subnets
        within the 18F Virtual Private Cloud.
    
        - 18F runs Nessus (Authenticated) scans of the Cloud Foundry environment weekly
        based on IP ranges in use. These scans include network discovery and vulnerability
        checks of operating systems, server software, and any supporting components or
        applications. Scans are automatically compared to previous scans to identify new
        vulnerabilities or changes which resolve previously identified vulnerabilities.
        Nessus reports are reviewed at least weekly and appropriate actions taken on discovery
        of vulnerabilities.
    
        - Nessus is used to run (Authenticated) scans when a new host/AMI/Stemcell is
        built.  This scan determines baseline posture used to contribute to decision of
        Production acceptance.  Additionally, this tool is used to execute CIS benchmark
        compliance scans when actively working to address configuration and hardening
        requirements.
    
        ', b: '- Nessus, and AlienVault USM for AWS utilize tools and techniques that
        promote interoperability such as Common Vulnerability Scoring System v2 (CVSS2),
        Common Platform Enumeration (CPE), and Common Vulnerability Enumeration (CVE).
        Tenable SecurityCenter is able to output reports in CyberScope format to meet
        NIST, DHS, and GSA reporting requirements.
    
        ', c: '- AlienVault USM for AWS, OWASP Zap and Tenable Nessus reports are reviewed
        and analyzed at least weekly and appropriate actions taken on discovery of vulnerabilities
        within the 18F Cloud Infrastructure and applications and from security control
        assessments conducted on its information systems.
    
        '}
    
      # AWS/Amazon Machine Images/satisfies/NIST-800-53/RA-5
      {a: '- 18F runs Nessus (Authenticated) scans of the Cloud Foundry environment weekly
        based on IP ranges in use. These scans include network discovery and vulnerability
        checks of operating systems, server software, and any supporting components or
        applications. Scans are automatically compared to previous scans to identify new
        vulnerabilities or changes which resolve previously identified vulnerabilities.
        Nessus reports are reviewed at least weekly and appropriate actions taken on discovery
        of vulnerabilities.
    
        - Nessus is used to run (Authenticated) scans when a new host/AMI/Stemcell is
        built.  This scan determines baseline posture used to contribute to decision of
        Production acceptance.  Additionally, this tool is used to execute CIS benchmark
        compliance scans when actively working to address configuration and hardening
        requirements.
    
        - OWASP Zap is used to conduct web Application scanning primarily for the OWASP
        Top 10. 18F uses it as an integrated security testing tool for finding vulnerabilities
        in web applications. 18F will provide more automated functionally of security
        tests using OWASP ZAP and Jenkins for its  software development lifecycle and
        continuous integration functions
    
        - AlienVault USM for AWS runs AWS friendly Authenticated vulnerability scans within
        the 18F AWS infrastructure and does not require permission from AWS to run scan
        within its Virtual Private Cloud (VPC)
    
        '}
    
      # AWS/OWASP Zap/satisfies/NIST-800-53/RA-5
      {a: "OWASP Zap is used to conduct web Application scanning primarily \nfor the OWASP\
        \ Top 10. 18F uses it as an integrated security testing tool for finding vulnerabilities\
        \ in web applications. 18F will provide more automated functionally of security\
        \ tests using OWASP ZAP and Jenkins for its \nsoftware development lifecycle and\
        \ continuous integration functions.\n", b: "OWASP Zap is used for web application\
        \ scanning of hosted websites \nand web based applications. It scans for the OWASP\
        \ TOP 10 vulnerabilities \nand utilize tools and techniques that promote interoperability\
        \ such \nas Common Vulnerability Scoring System v2 (CVSS2), Common Platform \n\
        Enumeration (CPE), and Common Vulnerability Enumeration (CVE). \n", c: "OWASP\
        \ Zap reports are reviewed and analyzed at least weekly and \nappropriate actions\
        \ taken on discovery of vulnerabilities within \nthe 18F Cloud Infrastructure\
        \ and applications and from security \ncontrol assessments conducted on its information\
        \ systems.\n"}
    
      # AWS/AlienVault/satisfies/NIST-800-53/RA-5
      AlienVault USM for AWS runs AWS friendly Authenticated vulnerability scans within
      the AWS infrastructure
    ...
    
    RA-5 (1):
    RA-5 (2):
    RA-5 (3):
    RA-5 (5):
    RA-5 (6):
    RA-5 (8):
    SA-1:
      # 18F/System and Services Acquisition Policy for 18F/satisfies/NIST-800-53/SA-1
      18F Policy
    ...
    
    SA-10:
    SA-10 (1):
    SA-11:
    SA-11 (1):
    SA-11 (2):
    SA-11 (8):
    SA-2:
    SA-3:
    SA-4:
    SA-4 (1):
    SA-4 (10):
    SA-4 (2):
    SA-4 (8):
    SA-4 (9):
    SA-5:
    SA-8:
    SA-9:
    SA-9 (1):
    SA-9 (2):
    SA-9 (4):
    SA-9 (5):
    SC-1:
      # 18F/System and Communications Protection Policy for 18F/satisfies/NIST-800-53/SC-1
      18F Policy
    ...
    
    SC-10:
    SC-12:
    SC-12 (2):
    SC-12 (3):
    SC-13:
      # AWS/AlienVault/satisfies/NIST-800-53/SC-13
      AlienVault USM for AWS uses TLS v1.2 with 4096 bit keys for data in transit and connections.
    ...
    
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/SC-13
      All traffic from the public internet to the Cloud Controller and UAA happens over
      HTTPS and operators configure encryption of the identity store in the UAA
    ...
    
    SC-15:
    SC-17:
    SC-18:
    SC-19:
    SC-2:
    SC-20:
    SC-21:
    SC-22:
    SC-23:
    SC-28:
    SC-28 (1):
      # CloudFoundry/User Account and Authentication (UAA) Server/satisfies/NIST-800-53/SC-28 (1)
      Operators configure encryption of the identity store in the UAA. When users register
      an account with the Cloud Foundry platform, the UAA, acts as the user store and
      stores user passwords in the UAA database using bcrypt. Bcrypt is a blowfish encryption
      algorithm, which enables cloud foundry to store a secure hash of your users' passwords.
    ...
    
    SC-39:
    SC-4:
    SC-5:
    SC-6:
    SC-7:
      # AWS/Sophos UTM/satisfies/NIST-800-53/SC-7
      {a: '- Sophos UTM 9 for AWS is deployed and configured on all instances
    
        ', b: '- Sophos UTM 9 Endpoint Protection is deployed and configured on all instances.
    
        '}
    
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/SC-7
      {a: "- Man in the Middle (MITM) Attacks. All of the AWS APIs are available via SSL-protected\
        \ endpoints which provide server authentication. Amazon EC2 AMIs automatically\
        \ generate new SSH host certificates on first boot and log them to the instance\u2019\
        s console. 18F can then use the secure APIs to call the console and access the\
        \ host certificates before logging into the instance for the first time. 18F uses\
        \ SSL for all interactions with AWS.\n- IP Spoofing. Amazon EC2 instances cannot\
        \ send spoofed network traffic. The AWS-controlled, host-based firewall infrastructure\
        \ will not permit an instance to send traffic with a source IP or MAC address\
        \ other than its own.\n- Amazon EC2 provides a complete firewall solution; this\
        \ mandatory inbound firewall is configured in a default deny-all mode and Amazon\
        \ EC2 customers must explicitly open the ports needed to allow inbound traffic.\
        \ The traffic may be restricted by protocol, by service port, as well as by source\
        \ IP address (individual IP or Classless Inter-Domain Routing (CIDR) block).\n"}
    
      # AWS/Amazon Virtual Private Cloud/satisfies/NIST-800-53/SC-7
      {b: "- 18F utilizes the AWS Virtual Private Cloud (VPC), which provides a private\
        \ subnet within the AWS cloud. Each VPC is configured to utilize Routing Rules,\
        \ Subnet Rules, and Security Group Rules. Each of these controls must have appropriate\
        \ rules and routes in-place before any external service is able to reach a host\
        \ within AWS.\n  - Each VPC is configured to utilize Routing Tables, and Security\
        \ Groups.  Each of these controls must have appropriate rules and routes in-place\
        \ before any external service is able to reach a host within Cloud Foundry.\n\
        \  - Sophos UTM 9 Endpoint Protection is deployed and configured on all instances.\n\
        \  - Host Based Firewall rules are enforced to provide security in depth\n  -\
        \ Each Amazon VPC is a distinct, isolated network within the cloud; network traffic\
        \ within each Amazon VPC is isolated from all other Amazon VPCs\n"}
    
      # AWS/Access Control List/satisfies/NIST-800-53/SC-7
      {a: '- ACLs, or traffic flow policies, are established on each managed interface,
        which manage and enforce the flow of traffic.
    
        '}
    
      # CloudFoundry/Application Security Groups/satisfies/NIST-800-53/SC-7
      {a: '- Cloud Foundry implements network traffic rules using Linux iptables on the
        component VMs. Operators can configure rules to prevent system access from external
        networks and between internal components, and to restrict applications from establishing
        connections over the DEA network interface.
    
        - Cloud Foundry recommends that you use Cloud Foundry ASGs to specify egress access
        rules for your applications. This functionality enables you to more securely restrict
        application outbound traffic to predefined routes.
    
        - Spoofing: If an IP, MAC, or ARP spoofing attack bypasses the physical firewall
        for the deployment, Cloud Foundry network traffic rules help prevent the attack
        from accessing application containers. Cloud Foundry uses application isolation,
        operating system restrictions, and encrypted connections to further mitigate risk.
    
        '}
    
    SC-7 (12):
    SC-7 (13):
    SC-7 (18):
    SC-7 (3):
    SC-7 (4):
    SC-7 (5):
    SC-7 (7):
    SC-7 (8):
    SC-8:
    SC-8 (1):
    SI-1:
      # 18F/System and Information Integrity Policy for 18F/satisfies/NIST-800-53/SI-1
      18F Policy
    ...
    
    SI-10:
    SI-11:
    SI-12:
    SI-16:
    SI-2:
      # AWS/Nessus/satisfies/NIST-800-53/SI-2
      {a: '- Flaw identification is accomplished via Nessus, AlienVault USM, OWASP Zap,
        and Code Climate static code analysis.  Nessus is a vulnerability, configuration,
        and compliance scanner.
    
        '}
    
      # AWS/OWASP Zap/satisfies/NIST-800-53/SI-2
      {a: 'OWASP Zap (Web Application scanner and penetration test tool) for monthly scanning
        of all web applications that reside within Cloud Foundry. Upon implementation
        of the application, authenticated (Web Application) scans will be run on Test
        instances of the code every major release and minor releases when the release
        contains a change with a potential security impact.  OWASP Zap reports are reviewed
        after each scan and appropriate actions taken on discovery of vulnerabilities.
    
        '}
    
      # CloudFoundry/BOSH Stemcells/satisfies/NIST-800-53/SI-2
      Cloud Foundry manages software vulnerability using releases and BOSH stemcells. New
      Cloud Foundry releases located at https:/github.com/cloudfoundry/cf-release, are
      created with updates to address code issues, while new stemcells are created with
      patches for the latest security fixes to address any underlying operating system
      issues.
    ...
    
    SI-2 (2):
    SI-2 (3):
    SI-3:
    SI-3 (1):
    SI-3 (2):
    SI-3 (7):
    SI-4:
      # AWS/Amazon Elastic Compute Cloud/satisfies/NIST-800-53/SI-4
      {a: '- All Cloud Foundry EC2 instances will be monitored for attacks and unauthorized
        connections through Alienvault USM
    
        ', b: '- All Cloud Foundry EC2 instances will be monitored for attacks and unauthorized
        connections through Alienvault USM
    
        '}
    
      # AWS/Amazon Machine Images/satisfies/NIST-800-53/SI-4
      {a: '- All Cloud Foundry EC2 instances will be monitored for attacks and unauthorized
        connections through Alienvault USM
    
        - AlienVault USM collects and aggregates various audit logs and alerts based on
        abnormal activity or attacks.
    
        '}
    
      # AWS/AlienVault/satisfies/NIST-800-53/SI-4
      Alienvault USM for AWS monitors for attacks and indicators of potential attacks,  unauthorized
      local, network, and remote connections using  built-in, essential security controls
      and threat intelligence
    ...
    
      # CloudFoundry/HM9000/satisfies/NIST-800-53/SI-4
      {c: "- HM9000 is essential to ensuring that apps running on Cloud Foundry remain available.\
        \ HM9000 restarts applications whenever the DEA running an app shuts down for\
        \ any reason, when Warden kills the app because it violated a quota, or when the\
        \ application process exits with a non-zero exit code\n- Cloud Foundry application\
        \ monitoring component HM9000 (Health Manager) has four core responsibilities:\n\
        - Monitor applications to determine their state (e.g. running, stopped, crashed,\
        \ etc.), version, and number of instances. HM9000 updates the actual state of\
        \ an application based on heartbeats and droplet.exited messages issued by the\
        \ DEA running the application.\n- Determine applications\u2019 expected state,\
        \ version, and number of instances. HM9000 obtains the desired state of an application\
        \ from a dump of the Cloud Controller database.\n- Reconcile the actual state\
        \ of applications with their expected state. For instance, if fewer than expected\
        \ instances are running, HM9000 will instruct the Cloud Controller to start the\
        \ appropriate number of instances.\n- Direct Cloud Controller to take action to\
        \ correct any discrepancies in the state of applications.\n"}
    
    SI-4 (1):
    SI-4 (16):
    SI-4 (2):
    SI-4 (23):
    SI-4 (4):
    SI-4 (5):
    SI-4(14):
    SI-5:
    SI-6:
    SI-7:
    SI-7 (1):
    SI-7 (7):
    SI-8:
    SI-8 (1):
    SI-8 (2):

